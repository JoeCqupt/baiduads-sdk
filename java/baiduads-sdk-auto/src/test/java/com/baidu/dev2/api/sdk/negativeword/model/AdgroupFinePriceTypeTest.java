/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.negativeword.model;

import com.baidu.dev2.api.sdk.negativeword.model.AreaPriceFactor;
import com.baidu.dev2.api.sdk.negativeword.model.CampaignExternalFlow;
import com.baidu.dev2.api.sdk.negativeword.model.CrowdPriceType;
import com.baidu.dev2.api.sdk.negativeword.model.DistancePriceFactorType;
import com.baidu.dev2.api.sdk.negativeword.model.MoreStylePriceType;
import com.baidu.dev2.api.sdk.negativeword.model.RegionPriceFactor;
import com.baidu.dev2.api.sdk.negativeword.model.SchedulePriceFactor;
import com.baidu.dev2.api.sdk.negativeword.model.StrategyPriceType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for AdgroupFinePriceType
 */
public class AdgroupFinePriceTypeTest {
    private final AdgroupFinePriceType model = new AdgroupFinePriceType();

    /**
     * Model tests for AdgroupFinePriceType
     */
    @Test
    public void testAdgroupFinePriceType() {
        // TODO: test AdgroupFinePriceType
    }

    /**
     * Test the property 'deviceprefer'
     */
    @Test
    public void devicepreferTest() {
        // TODO: test deviceprefer
    }

    /**
     * Test the property 'mobilePriceFactor'
     */
    @Test
    public void mobilePriceFactorTest() {
        // TODO: test mobilePriceFactor
    }

    /**
     * Test the property 'accuPriceFactor'
     */
    @Test
    public void accuPriceFactorTest() {
        // TODO: test accuPriceFactor
    }

    /**
     * Test the property 'wordPriceFactor'
     */
    @Test
    public void wordPriceFactorTest() {
        // TODO: test wordPriceFactor
    }

    /**
     * Test the property 'widePriceFactor'
     */
    @Test
    public void widePriceFactorTest() {
        // TODO: test widePriceFactor
    }

    /**
     * Test the property 'matchPriceFactorStatus'
     */
    @Test
    public void matchPriceFactorStatusTest() {
        // TODO: test matchPriceFactorStatus
    }

    /**
     * Test the property 'hctStatus'
     */
    @Test
    public void hctStatusTest() {
        // TODO: test hctStatus
    }

    /**
     * Test the property 'remarketingStatus'
     */
    @Test
    public void remarketingStatusTest() {
        // TODO: test remarketingStatus
    }

    /**
     * Test the property 'remarketingPriceFactor'
     */
    @Test
    public void remarketingPriceFactorTest() {
        // TODO: test remarketingPriceFactor
    }

    /**
     * Test the property 'remarketingPauseStatus'
     */
    @Test
    public void remarketingPauseStatusTest() {
        // TODO: test remarketingPauseStatus
    }

    /**
     * Test the property 'regionTarget'
     */
    @Test
    public void regionTargetTest() {
        // TODO: test regionTarget
    }

    /**
     * Test the property 'regionPriceFactor'
     */
    @Test
    public void regionPriceFactorTest() {
        // TODO: test regionPriceFactor
    }

    /**
     * Test the property 'distancePriceStatus'
     */
    @Test
    public void distancePriceStatusTest() {
        // TODO: test distancePriceStatus
    }

    /**
     * Test the property 'distancePriceFactor'
     */
    @Test
    public void distancePriceFactorTest() {
        // TODO: test distancePriceFactor
    }

    /**
     * Test the property 'areaPriceFactor'
     */
    @Test
    public void areaPriceFactorTest() {
        // TODO: test areaPriceFactor
    }

    /**
     * Test the property 'schedule'
     */
    @Test
    public void scheduleTest() {
        // TODO: test schedule
    }

    /**
     * Test the property 'schedulePriceFactors'
     */
    @Test
    public void schedulePriceFactorsTest() {
        // TODO: test schedulePriceFactors
    }

    /**
     * Test the property 'externalFlowType'
     */
    @Test
    public void externalFlowTypeTest() {
        // TODO: test externalFlowType
    }

    /**
     * Test the property 'moreStyleBidType'
     */
    @Test
    public void moreStyleBidTypeTest() {
        // TODO: test moreStyleBidType
    }

    /**
     * Test the property 'bidprefer'
     */
    @Test
    public void bidpreferTest() {
        // TODO: test bidprefer
    }

    /**
     * Test the property 'pcPriceFactor'
     */
    @Test
    public void pcPriceFactorTest() {
        // TODO: test pcPriceFactor
    }

    /**
     * Test the property 'cmStatus'
     */
    @Test
    public void cmStatusTest() {
        // TODO: test cmStatus
    }

    /**
     * Test the property 'strategyPriceFactor'
     */
    @Test
    public void strategyPriceFactorTest() {
        // TODO: test strategyPriceFactor
    }

    /**
     * Test the property 'crowdPriceFactors'
     */
    @Test
    public void crowdPriceFactorsTest() {
        // TODO: test crowdPriceFactors
    }

    /**
     * Test the property 'ocpcSecondStage'
     */
    @Test
    public void ocpcSecondStageTest() {
        // TODO: test ocpcSecondStage
    }

    /**
     * Test the property 'minValidStrategyPriceFactor'
     */
    @Test
    public void minValidStrategyPriceFactorTest() {
        // TODO: test minValidStrategyPriceFactor
    }

    /**
     * Test the property 'maxValidStrategyPriceFactor'
     */
    @Test
    public void maxValidStrategyPriceFactorTest() {
        // TODO: test maxValidStrategyPriceFactor
    }

    /**
     * Test the property 'minUnvalidStrategyPriceFactor'
     */
    @Test
    public void minUnvalidStrategyPriceFactorTest() {
        // TODO: test minUnvalidStrategyPriceFactor
    }

    /**
     * Test the property 'maxUnvalidStrategyPriceFactor'
     */
    @Test
    public void maxUnvalidStrategyPriceFactorTest() {
        // TODO: test maxUnvalidStrategyPriceFactor
    }

}
