/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.negativeword.model;

import com.baidu.dev2.api.sdk.negativeword.model.AdgroupType;
import com.baidu.dev2.api.sdk.negativeword.model.AreaPriceFactor;
import com.baidu.dev2.api.sdk.negativeword.model.BusinessLabelType;
import com.baidu.dev2.api.sdk.negativeword.model.CampaignCostManager;
import com.baidu.dev2.api.sdk.negativeword.model.CampaignDistanceRangeFactor;
import com.baidu.dev2.api.sdk.negativeword.model.CampaignExternalFlow;
import com.baidu.dev2.api.sdk.negativeword.model.CampaignHct;
import com.baidu.dev2.api.sdk.negativeword.model.CampaignRegionArea;
import com.baidu.dev2.api.sdk.negativeword.model.CampaignRegionStore;
import com.baidu.dev2.api.sdk.negativeword.model.DistancePriceFactorType;
import com.baidu.dev2.api.sdk.negativeword.model.DynamicCreativeGrabUrl;
import com.baidu.dev2.api.sdk.negativeword.model.NovelPromotionPageType;
import com.baidu.dev2.api.sdk.negativeword.model.OfflineReason;
import com.baidu.dev2.api.sdk.negativeword.model.OfflineTimeType;
import com.baidu.dev2.api.sdk.negativeword.model.PriceStrategyInfo;
import com.baidu.dev2.api.sdk.negativeword.model.RegionPOIType;
import com.baidu.dev2.api.sdk.negativeword.model.RegionPriceFactor;
import com.baidu.dev2.api.sdk.negativeword.model.RegionTargetDistrictType;
import com.baidu.dev2.api.sdk.negativeword.model.SchedulePriceFactor;
import com.baidu.dev2.api.sdk.negativeword.model.ScheduleType;
import com.baidu.dev2.api.sdk.negativeword.model.ShareRepertoryType;
import com.baidu.dev2.api.sdk.negativeword.model.StorePageInfoType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for CampaignType
 */
public class CampaignTypeTest {
    private final CampaignType model = new CampaignType();

    /**
     * Model tests for CampaignType
     */
    @Test
    public void testCampaignType() {
        // TODO: test CampaignType
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

    /**
     * Test the property 'campaignId'
     */
    @Test
    public void campaignIdTest() {
        // TODO: test campaignId
    }

    /**
     * Test the property 'campaignName'
     */
    @Test
    public void campaignNameTest() {
        // TODO: test campaignName
    }

    /**
     * Test the property 'businessPointId'
     */
    @Test
    public void businessPointIdTest() {
        // TODO: test businessPointId
    }

    /**
     * Test the property 'businessPointName'
     */
    @Test
    public void businessPointNameTest() {
        // TODO: test businessPointName
    }

    /**
     * Test the property 'marketingTargetId'
     */
    @Test
    public void marketingTargetIdTest() {
        // TODO: test marketingTargetId
    }

    /**
     * Test the property 'targetUrl'
     */
    @Test
    public void targetUrlTest() {
        // TODO: test targetUrl
    }

    /**
     * Test the property 'bidPrefer'
     */
    @Test
    public void bidPreferTest() {
        // TODO: test bidPrefer
    }

    /**
     * Test the property 'pause'
     */
    @Test
    public void pauseTest() {
        // TODO: test pause
    }

    /**
     * Test the property 'budget'
     */
    @Test
    public void budgetTest() {
        // TODO: test budget
    }

    /**
     * Test the property 'regionTarget'
     */
    @Test
    public void regionTargetTest() {
        // TODO: test regionTarget
    }

    /**
     * Test the property 'showProb'
     */
    @Test
    public void showProbTest() {
        // TODO: test showProb
    }

    /**
     * Test the property 'negativeWords'
     */
    @Test
    public void negativeWordsTest() {
        // TODO: test negativeWords
    }

    /**
     * Test the property 'exactNegativeWords'
     */
    @Test
    public void exactNegativeWordsTest() {
        // TODO: test exactNegativeWords
    }

    /**
     * Test the property 'device'
     */
    @Test
    public void deviceTest() {
        // TODO: test device
    }

    /**
     * Test the property 'priceRatio'
     */
    @Test
    public void priceRatioTest() {
        // TODO: test priceRatio
    }

    /**
     * Test the property 'adType'
     */
    @Test
    public void adTypeTest() {
        // TODO: test adType
    }

    /**
     * Test the property 'wregionZtc'
     */
    @Test
    public void wregionZtcTest() {
        // TODO: test wregionZtc
    }

    /**
     * Test the property 'cpaPrice'
     */
    @Test
    public void cpaPriceTest() {
        // TODO: test cpaPrice
    }

    /**
     * Test the property 'cpaType'
     */
    @Test
    public void cpaTypeTest() {
        // TODO: test cpaType
    }

    /**
     * Test the property 'pcPriceRatio'
     */
    @Test
    public void pcPriceRatioTest() {
        // TODO: test pcPriceRatio
    }

    /**
     * Test the property 'campaignAutoBidStatus'
     */
    @Test
    public void campaignAutoBidStatusTest() {
        // TODO: test campaignAutoBidStatus
    }

    /**
     * Test the property 'excludeIp'
     */
    @Test
    public void excludeIpTest() {
        // TODO: test excludeIp
    }

    /**
     * Test the property 'budgetOfflineTime'
     */
    @Test
    public void budgetOfflineTimeTest() {
        // TODO: test budgetOfflineTime
    }

    /**
     * Test the property 'schedule'
     */
    @Test
    public void scheduleTest() {
        // TODO: test schedule
    }

    /**
     * Test the property 'internalType'
     */
    @Test
    public void internalTypeTest() {
        // TODO: test internalType
    }

    /**
     * Test the property 'offlineReasons'
     */
    @Test
    public void offlineReasonsTest() {
        // TODO: test offlineReasons
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'dynCreativeExclusion'
     */
    @Test
    public void dynCreativeExclusionTest() {
        // TODO: test dynCreativeExclusion
    }

    /**
     * Test the property 'operator'
     */
    @Test
    public void operatorTest() {
        // TODO: test operator
    }

    /**
     * Test the property 'isDynamicCreative'
     */
    @Test
    public void isDynamicCreativeTest() {
        // TODO: test isDynamicCreative
    }

    /**
     * Test the property 'isDynamicTagSublink'
     */
    @Test
    public void isDynamicTagSublinkTest() {
        // TODO: test isDynamicTagSublink
    }

    /**
     * Test the property 'isDynamicTitle'
     */
    @Test
    public void isDynamicTitleTest() {
        // TODO: test isDynamicTitle
    }

    /**
     * Test the property 'isDynamicHotRedirect'
     */
    @Test
    public void isDynamicHotRedirectTest() {
        // TODO: test isDynamicHotRedirect
    }

    /**
     * Test the property 'wregionPOI'
     */
    @Test
    public void wregionPOITest() {
        // TODO: test wregionPOI
    }

    /**
     * Test the property 'campaignType'
     */
    @Test
    public void campaignTypeTest() {
        // TODO: test campaignType
    }

    /**
     * Test the property 'isDelete'
     */
    @Test
    public void isDeleteTest() {
        // TODO: test isDelete
    }

    /**
     * Test the property 'queryRegionStatus'
     */
    @Test
    public void queryRegionStatusTest() {
        // TODO: test queryRegionStatus
    }

    /**
     * Test the property 'acctDynamicCreateStatus'
     */
    @Test
    public void acctDynamicCreateStatusTest() {
        // TODO: test acctDynamicCreateStatus
    }

    /**
     * Test the property 'dynamicCreativeToolId'
     */
    @Test
    public void dynamicCreativeToolIdTest() {
        // TODO: test dynamicCreativeToolId
    }

    /**
     * Test the property 'marker'
     */
    @Test
    public void markerTest() {
        // TODO: test marker
    }

    /**
     * Test the property 'campaignStatus1'
     */
    @Test
    public void campaignStatus1Test() {
        // TODO: test campaignStatus1
    }

    /**
     * Test the property 'addFrom'
     */
    @Test
    public void addFromTest() {
        // TODO: test addFrom
    }

    /**
     * Test the property 'scheduleRaw'
     */
    @Test
    public void scheduleRawTest() {
        // TODO: test scheduleRaw
    }

    /**
     * Test the property 'distancePriceStatus'
     */
    @Test
    public void distancePriceStatusTest() {
        // TODO: test distancePriceStatus
    }

    /**
     * Test the property 'dynamicCreativeGrabUrl'
     */
    @Test
    public void dynamicCreativeGrabUrlTest() {
        // TODO: test dynamicCreativeGrabUrl
    }

    /**
     * Test the property 'schedulePriceFactors'
     */
    @Test
    public void schedulePriceFactorsTest() {
        // TODO: test schedulePriceFactors
    }

    /**
     * Test the property 'reOnlineReasons'
     */
    @Test
    public void reOnlineReasonsTest() {
        // TODO: test reOnlineReasons
    }

    /**
     * Test the property 'regionPriceFactor'
     */
    @Test
    public void regionPriceFactorTest() {
        // TODO: test regionPriceFactor
    }

    /**
     * Test the property 'distancePriceFactor'
     */
    @Test
    public void distancePriceFactorTest() {
        // TODO: test distancePriceFactor
    }

    /**
     * Test the property 'areaPriceFactor'
     */
    @Test
    public void areaPriceFactorTest() {
        // TODO: test areaPriceFactor
    }

    /**
     * Test the property 'distanceRangeFactor'
     */
    @Test
    public void distanceRangeFactorTest() {
        // TODO: test distanceRangeFactor
    }

    /**
     * Test the property 'acctDynamicTagSublinkStatus'
     */
    @Test
    public void acctDynamicTagSublinkStatusTest() {
        // TODO: test acctDynamicTagSublinkStatus
    }

    /**
     * Test the property 'acctDynamicTitleStatus'
     */
    @Test
    public void acctDynamicTitleStatusTest() {
        // TODO: test acctDynamicTitleStatus
    }

    /**
     * Test the property 'acctDynamicHotRedirectStatus'
     */
    @Test
    public void acctDynamicHotRedirectStatusTest() {
        // TODO: test acctDynamicHotRedirectStatus
    }

    /**
     * Test the property 'campaignAdvanceMatch'
     */
    @Test
    public void campaignAdvanceMatchTest() {
        // TODO: test campaignAdvanceMatch
    }

    /**
     * Test the property 'acctAdvanceMatch'
     */
    @Test
    public void acctAdvanceMatchTest() {
        // TODO: test acctAdvanceMatch
    }

    /**
     * Test the property 'campaignHct'
     */
    @Test
    public void campaignHctTest() {
        // TODO: test campaignHct
    }

    /**
     * Test the property 'externalFlow'
     */
    @Test
    public void externalFlowTest() {
        // TODO: test externalFlow
    }

    /**
     * Test the property 'acctDynamicTitleList'
     */
    @Test
    public void acctDynamicTitleListTest() {
        // TODO: test acctDynamicTitleList
    }

    /**
     * Test the property 'acctDynamicTitleAbstract'
     */
    @Test
    public void acctDynamicTitleAbstractTest() {
        // TODO: test acctDynamicTitleAbstract
    }

    /**
     * Test the property 'sameStageStatus'
     */
    @Test
    public void sameStageStatusTest() {
        // TODO: test sameStageStatus
    }

    /**
     * Test the property 'acctSameStageStatus'
     */
    @Test
    public void acctSameStageStatusTest() {
        // TODO: test acctSameStageStatus
    }

    /**
     * Test the property 'acctScenarizedStatus'
     */
    @Test
    public void acctScenarizedStatusTest() {
        // TODO: test acctScenarizedStatus
    }

    /**
     * Test the property 'campaignScenarizedPhraseStatus'
     */
    @Test
    public void campaignScenarizedPhraseStatusTest() {
        // TODO: test campaignScenarizedPhraseStatus
    }

    /**
     * Test the property 'prRealtimeBrowseStatus'
     */
    @Test
    public void prRealtimeBrowseStatusTest() {
        // TODO: test prRealtimeBrowseStatus
    }

    /**
     * Test the property 'prPeoplesAttributeStatus'
     */
    @Test
    public void prPeoplesAttributeStatusTest() {
        // TODO: test prPeoplesAttributeStatus
    }

    /**
     * Test the property 'prStatisticsParamStatus'
     */
    @Test
    public void prStatisticsParamStatusTest() {
        // TODO: test prStatisticsParamStatus
    }

    /**
     * Test the property 'regionTargetDistrict'
     */
    @Test
    public void regionTargetDistrictTest() {
        // TODO: test regionTargetDistrict
    }

    /**
     * Test the property 'urlParamStatus'
     */
    @Test
    public void urlParamStatusTest() {
        // TODO: test urlParamStatus
    }

    /**
     * Test the property 'budgetCumulateStatus'
     */
    @Test
    public void budgetCumulateStatusTest() {
        // TODO: test budgetCumulateStatus
    }

    /**
     * Test the property 'acctBudgetCumulateStatus'
     */
    @Test
    public void acctBudgetCumulateStatusTest() {
        // TODO: test acctBudgetCumulateStatus
    }

    /**
     * Test the property 'customerBudgetModTime'
     */
    @Test
    public void customerBudgetModTimeTest() {
        // TODO: test customerBudgetModTime
    }

    /**
     * Test the property 'autoTargetingStatus'
     */
    @Test
    public void autoTargetingStatusTest() {
        // TODO: test autoTargetingStatus
    }

    /**
     * Test the property 'autoTargetingPrice'
     */
    @Test
    public void autoTargetingPriceTest() {
        // TODO: test autoTargetingPrice
    }

    /**
     * Test the property 'autoTargetingBudget'
     */
    @Test
    public void autoTargetingBudgetTest() {
        // TODO: test autoTargetingBudget
    }

    /**
     * Test the property 'prSearchIntentionStatus'
     */
    @Test
    public void prSearchIntentionStatusTest() {
        // TODO: test prSearchIntentionStatus
    }

    /**
     * Test the property 'dsaParamStatus'
     */
    @Test
    public void dsaParamStatusTest() {
        // TODO: test dsaParamStatus
    }

    /**
     * Test the property 'campaignCostManager'
     */
    @Test
    public void campaignCostManagerTest() {
        // TODO: test campaignCostManager
    }

    /**
     * Test the property 'campaignDynamicCreativeLinkStatus'
     */
    @Test
    public void campaignDynamicCreativeLinkStatusTest() {
        // TODO: test campaignDynamicCreativeLinkStatus
    }

    /**
     * Test the property 'campaignDynamicCreativeTitleStatus'
     */
    @Test
    public void campaignDynamicCreativeTitleStatusTest() {
        // TODO: test campaignDynamicCreativeTitleStatus
    }

    /**
     * Test the property 'campaignDynamicCreativeHotRedirectStatus'
     */
    @Test
    public void campaignDynamicCreativeHotRedirectStatusTest() {
        // TODO: test campaignDynamicCreativeHotRedirectStatus
    }

    /**
     * Test the property 'campaignContentRedirectStatus'
     */
    @Test
    public void campaignContentRedirectStatusTest() {
        // TODO: test campaignContentRedirectStatus
    }

    /**
     * Test the property 'campaignPicTextStatus'
     */
    @Test
    public void campaignPicTextStatusTest() {
        // TODO: test campaignPicTextStatus
    }

    /**
     * Test the property 'campaignKnowledgeStatus'
     */
    @Test
    public void campaignKnowledgeStatusTest() {
        // TODO: test campaignKnowledgeStatus
    }

    /**
     * Test the property 'campaignSinglePicStatus'
     */
    @Test
    public void campaignSinglePicStatusTest() {
        // TODO: test campaignSinglePicStatus
    }

    /**
     * Test the property 'campaignExtendTitleStatus'
     */
    @Test
    public void campaignExtendTitleStatusTest() {
        // TODO: test campaignExtendTitleStatus
    }

    /**
     * Test the property 'acctDynamicCreativeLinkStatus'
     */
    @Test
    public void acctDynamicCreativeLinkStatusTest() {
        // TODO: test acctDynamicCreativeLinkStatus
    }

    /**
     * Test the property 'acctDynamicCreativeTitleStatus'
     */
    @Test
    public void acctDynamicCreativeTitleStatusTest() {
        // TODO: test acctDynamicCreativeTitleStatus
    }

    /**
     * Test the property 'acctDynamicCreativeHotRedirectStatus'
     */
    @Test
    public void acctDynamicCreativeHotRedirectStatusTest() {
        // TODO: test acctDynamicCreativeHotRedirectStatus
    }

    /**
     * Test the property 'acctContentRedirectStatus'
     */
    @Test
    public void acctContentRedirectStatusTest() {
        // TODO: test acctContentRedirectStatus
    }

    /**
     * Test the property 'acctPicTextStatus'
     */
    @Test
    public void acctPicTextStatusTest() {
        // TODO: test acctPicTextStatus
    }

    /**
     * Test the property 'acctKnowledgeStatus'
     */
    @Test
    public void acctKnowledgeStatusTest() {
        // TODO: test acctKnowledgeStatus
    }

    /**
     * Test the property 'acctSinglePicStatus'
     */
    @Test
    public void acctSinglePicStatusTest() {
        // TODO: test acctSinglePicStatus
    }

    /**
     * Test the property 'acctExtendTitleStatus'
     */
    @Test
    public void acctExtendTitleStatusTest() {
        // TODO: test acctExtendTitleStatus
    }

    /**
     * Test the property 'feedParamStatus'
     */
    @Test
    public void feedParamStatusTest() {
        // TODO: test feedParamStatus
    }

    /**
     * Test the property 'feedFlowStrategy'
     */
    @Test
    public void feedFlowStrategyTest() {
        // TODO: test feedFlowStrategy
    }

    /**
     * Test the property 'feedFlowPriceRatio'
     */
    @Test
    public void feedFlowPriceRatioTest() {
        // TODO: test feedFlowPriceRatio
    }

    /**
     * Test the property 'acctFeedFlowPriceRatio'
     */
    @Test
    public void acctFeedFlowPriceRatioTest() {
        // TODO: test acctFeedFlowPriceRatio
    }

    /**
     * Test the property 'acctFeedFlowPriceStrategy'
     */
    @Test
    public void acctFeedFlowPriceStrategyTest() {
        // TODO: test acctFeedFlowPriceStrategy
    }

    /**
     * Test the property 'jingxiuTwoSublinkFactor'
     */
    @Test
    public void jingxiuTwoSublinkFactorTest() {
        // TODO: test jingxiuTwoSublinkFactor
    }

    /**
     * Test the property 'nightTimeSwitchStatus'
     */
    @Test
    public void nightTimeSwitchStatusTest() {
        // TODO: test nightTimeSwitchStatus
    }

    /**
     * Test the property 'crowdAutoChosen'
     */
    @Test
    public void crowdAutoChosenTest() {
        // TODO: test crowdAutoChosen
    }

    /**
     * Test the property 'creativeTitleReplaceStatus'
     */
    @Test
    public void creativeTitleReplaceStatusTest() {
        // TODO: test creativeTitleReplaceStatus
    }

    /**
     * Test the property 'autoTatgetFlowStatus'
     */
    @Test
    public void autoTatgetFlowStatusTest() {
        // TODO: test autoTatgetFlowStatus
    }

    /**
     * Test the property 'campaignStatus2'
     */
    @Test
    public void campaignStatus2Test() {
        // TODO: test campaignStatus2
    }

    /**
     * Test the property 'systemWordStatus'
     */
    @Test
    public void systemWordStatusTest() {
        // TODO: test systemWordStatus
    }

    /**
     * Test the property 'scheduleTemplateName'
     */
    @Test
    public void scheduleTemplateNameTest() {
        // TODO: test scheduleTemplateName
    }

    /**
     * Test the property 'scheduleTemplateId'
     */
    @Test
    public void scheduleTemplateIdTest() {
        // TODO: test scheduleTemplateId
    }

    /**
     * Test the property 'negativeWordPackets'
     */
    @Test
    public void negativeWordPacketsTest() {
        // TODO: test negativeWordPackets
    }

    /**
     * Test the property 'negativeWordPacketIds'
     */
    @Test
    public void negativeWordPacketIdsTest() {
        // TODO: test negativeWordPacketIds
    }

    /**
     * Test the property 'indepdentNegativeWords'
     */
    @Test
    public void indepdentNegativeWordsTest() {
        // TODO: test indepdentNegativeWords
    }

    /**
     * Test the property 'indepdentExactNegativeWords'
     */
    @Test
    public void indepdentExactNegativeWordsTest() {
        // TODO: test indepdentExactNegativeWords
    }

    /**
     * Test the property 'medicalUrlStatus'
     */
    @Test
    public void medicalUrlStatusTest() {
        // TODO: test medicalUrlStatus
    }

    /**
     * Test the property 'indentNegativePacketWords'
     */
    @Test
    public void indentNegativePacketWordsTest() {
        // TODO: test indentNegativePacketWords
    }

    /**
     * Test the property 'indentNegativePacketExactWords'
     */
    @Test
    public void indentNegativePacketExactWordsTest() {
        // TODO: test indentNegativePacketExactWords
    }

    /**
     * Test the property 'regionRestrictStatus'
     */
    @Test
    public void regionRestrictStatusTest() {
        // TODO: test regionRestrictStatus
    }

    /**
     * Test the property 'businessPointFinalLevel'
     */
    @Test
    public void businessPointFinalLevelTest() {
        // TODO: test businessPointFinalLevel
    }

    /**
     * Test the property 'regionType'
     */
    @Test
    public void regionTypeTest() {
        // TODO: test regionType
    }

    /**
     * Test the property 'regionArea'
     */
    @Test
    public void regionAreaTest() {
        // TODO: test regionArea
    }

    /**
     * Test the property 'regionStore'
     */
    @Test
    public void regionStoreTest() {
        // TODO: test regionStore
    }

    /**
     * Test the property 'storePlanWregion'
     */
    @Test
    public void storePlanWregionTest() {
        // TODO: test storePlanWregion
    }

    /**
     * Test the property 'contentLabelStatus'
     */
    @Test
    public void contentLabelStatusTest() {
        // TODO: test contentLabelStatus
    }

    /**
     * Test the property 'storePageInfos'
     */
    @Test
    public void storePageInfosTest() {
        // TODO: test storePageInfos
    }

    /**
     * Test the property 'businessLabelStatus'
     */
    @Test
    public void businessLabelStatusTest() {
        // TODO: test businessLabelStatus
    }

    /**
     * Test the property 'businessLabelFinalStatus'
     */
    @Test
    public void businessLabelFinalStatusTest() {
        // TODO: test businessLabelFinalStatus
    }

    /**
     * Test the property 'businessLabelAdgroupIds'
     */
    @Test
    public void businessLabelAdgroupIdsTest() {
        // TODO: test businessLabelAdgroupIds
    }

    /**
     * Test the property 'adgroups'
     */
    @Test
    public void adgroupsTest() {
        // TODO: test adgroups
    }

    /**
     * Test the property 'adgroupsNotInUse'
     */
    @Test
    public void adgroupsNotInUseTest() {
        // TODO: test adgroupsNotInUse
    }

    /**
     * Test the property 'shopType'
     */
    @Test
    public void shopTypeTest() {
        // TODO: test shopType
    }

    /**
     * Test the property 'adviceId'
     */
    @Test
    public void adviceIdTest() {
        // TODO: test adviceId
    }

    /**
     * Test the property 'adviceOptType'
     */
    @Test
    public void adviceOptTypeTest() {
        // TODO: test adviceOptType
    }

    /**
     * Test the property 'smartMainAdgroupId'
     */
    @Test
    public void smartMainAdgroupIdTest() {
        // TODO: test smartMainAdgroupId
    }

    /**
     * Test the property 'businessLabels'
     */
    @Test
    public void businessLabelsTest() {
        // TODO: test businessLabels
    }

    /**
     * Test the property 'excludeQueryRegionStatus'
     */
    @Test
    public void excludeQueryRegionStatusTest() {
        // TODO: test excludeQueryRegionStatus
    }

    /**
     * Test the property 'campaignExcludeQueryRegionStatus'
     */
    @Test
    public void campaignExcludeQueryRegionStatusTest() {
        // TODO: test campaignExcludeQueryRegionStatus
    }

    /**
     * Test the property 'priceStrategyId'
     */
    @Test
    public void priceStrategyIdTest() {
        // TODO: test priceStrategyId
    }

    /**
     * Test the property 'priceStrategyName'
     */
    @Test
    public void priceStrategyNameTest() {
        // TODO: test priceStrategyName
    }

    /**
     * Test the property 'priceStrategyType'
     */
    @Test
    public void priceStrategyTypeTest() {
        // TODO: test priceStrategyType
    }

    /**
     * Test the property 'campaignAutoExpansionStatus'
     */
    @Test
    public void campaignAutoExpansionStatusTest() {
        // TODO: test campaignAutoExpansionStatus
    }

    /**
     * Test the property 'oCPCStatus'
     */
    @Test
    public void oCPCStatusTest() {
        // TODO: test oCPCStatus
    }

    /**
     * Test the property 'campaignExpansionStatus'
     */
    @Test
    public void campaignExpansionStatusTest() {
        // TODO: test campaignExpansionStatus
    }

    /**
     * Test the property 'promotionPage'
     */
    @Test
    public void promotionPageTest() {
        // TODO: test promotionPage
    }

    /**
     * Test the property 'targetUrlSuffix'
     */
    @Test
    public void targetUrlSuffixTest() {
        // TODO: test targetUrlSuffix
    }

    /**
     * Test the property 'priceStrategyPause'
     */
    @Test
    public void priceStrategyPauseTest() {
        // TODO: test priceStrategyPause
    }

    /**
     * Test the property 'adviceSource'
     */
    @Test
    public void adviceSourceTest() {
        // TODO: test adviceSource
    }

    /**
     * Test the property 'campaignCascadeStatus'
     */
    @Test
    public void campaignCascadeStatusTest() {
        // TODO: test campaignCascadeStatus
    }

    /**
     * Test the property 'createTime'
     */
    @Test
    public void createTimeTest() {
        // TODO: test createTime
    }

    /**
     * Test the property 'equipmentType'
     */
    @Test
    public void equipmentTypeTest() {
        // TODO: test equipmentType
    }

    /**
     * Test the property 'campaignBidType'
     */
    @Test
    public void campaignBidTypeTest() {
        // TODO: test campaignBidType
    }

    /**
     * Test the property 'campaignBid'
     */
    @Test
    public void campaignBidTest() {
        // TODO: test campaignBid
    }

    /**
     * Test the property 'campaignOcpcBidType'
     */
    @Test
    public void campaignOcpcBidTypeTest() {
        // TODO: test campaignOcpcBidType
    }

    /**
     * Test the property 'campaignOcpcBid'
     */
    @Test
    public void campaignOcpcBidTest() {
        // TODO: test campaignOcpcBid
    }

    /**
     * Test the property 'campaignTransTypes'
     */
    @Test
    public void campaignTransTypesTest() {
        // TODO: test campaignTransTypes
    }

    /**
     * Test the property 'campaignDeepTransTypes'
     */
    @Test
    public void campaignDeepTransTypesTest() {
        // TODO: test campaignDeepTransTypes
    }

    /**
     * Test the property 'campaignCvSources'
     */
    @Test
    public void campaignCvSourcesTest() {
        // TODO: test campaignCvSources
    }

    /**
     * Test the property 'campaignAutoOptimizationStatus'
     */
    @Test
    public void campaignAutoOptimizationStatusTest() {
        // TODO: test campaignAutoOptimizationStatus
    }

    /**
     * Test the property 'priceStrategy'
     */
    @Test
    public void priceStrategyTest() {
        // TODO: test priceStrategy
    }

    /**
     * Test the property 'campaignOcpcStrategyId'
     */
    @Test
    public void campaignOcpcStrategyIdTest() {
        // TODO: test campaignOcpcStrategyId
    }

    /**
     * Test the property 'os'
     */
    @Test
    public void osTest() {
        // TODO: test os
    }

    /**
     * Test the property 'smartRegion'
     */
    @Test
    public void smartRegionTest() {
        // TODO: test smartRegion
    }

    /**
     * Test the property 'dpaDevice'
     */
    @Test
    public void dpaDeviceTest() {
        // TODO: test dpaDevice
    }

    /**
     * Test the property 'adSource'
     */
    @Test
    public void adSourceTest() {
        // TODO: test adSource
    }

}
