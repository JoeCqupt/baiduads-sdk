/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.styleanalyse.model;

import java.util.Objects;
import java.util.Arrays;
import com.baidu.dev2.api.sdk.styleanalyse.model.SegmentType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SegmentPicDetailType
 */
@JsonPropertyOrder({
  SegmentPicDetailType.JSON_PROPERTY_CSS_ID,
  SegmentPicDetailType.JSON_PROPERTY_PIC_URL,
  SegmentPicDetailType.JSON_PROPERTY_TOTAL_COUNT,
  SegmentPicDetailType.JSON_PROPERTY_COUNT_MAP,
  SegmentPicDetailType.JSON_PROPERTY_SELF_PIC_TYPE,
  SegmentPicDetailType.JSON_PROPERTY_PULL_PIC_TYPE
})
@JsonTypeName("SegmentPicDetailType")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SegmentPicDetailType {
  public static final String JSON_PROPERTY_CSS_ID = "cssId";
  private String cssId;

  public static final String JSON_PROPERTY_PIC_URL = "picUrl";
  private String picUrl;

  public static final String JSON_PROPERTY_TOTAL_COUNT = "totalCount";
  private Integer totalCount;

  public static final String JSON_PROPERTY_COUNT_MAP = "countMap";
  private java.util.Map countMap;

  public static final String JSON_PROPERTY_SELF_PIC_TYPE = "selfPicType";
  private List<SegmentType> selfPicType = null;

  public static final String JSON_PROPERTY_PULL_PIC_TYPE = "pullPicType";
  private List<SegmentType> pullPicType = null;

  public SegmentPicDetailType() { 
  }

  public SegmentPicDetailType cssId(String cssId) {
    
    this.cssId = cssId;
    return this;
  }

   /**
   * Get cssId
   * @return cssId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CSS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCssId() {
    return cssId;
  }


  @JsonProperty(JSON_PROPERTY_CSS_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCssId(String cssId) {
    this.cssId = cssId;
  }


  public SegmentPicDetailType picUrl(String picUrl) {
    
    this.picUrl = picUrl;
    return this;
  }

   /**
   * Get picUrl
   * @return picUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PIC_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPicUrl() {
    return picUrl;
  }


  @JsonProperty(JSON_PROPERTY_PIC_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPicUrl(String picUrl) {
    this.picUrl = picUrl;
  }


  public SegmentPicDetailType totalCount(Integer totalCount) {
    
    this.totalCount = totalCount;
    return this;
  }

   /**
   * Get totalCount
   * @return totalCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTotalCount() {
    return totalCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }


  public SegmentPicDetailType countMap(java.util.Map countMap) {
    
    this.countMap = countMap;
    return this;
  }

   /**
   * Get countMap
   * @return countMap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COUNT_MAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.Map getCountMap() {
    return countMap;
  }


  @JsonProperty(JSON_PROPERTY_COUNT_MAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCountMap(java.util.Map countMap) {
    this.countMap = countMap;
  }


  public SegmentPicDetailType selfPicType(List<SegmentType> selfPicType) {
    
    this.selfPicType = selfPicType;
    return this;
  }

  public SegmentPicDetailType addSelfPicTypeItem(SegmentType selfPicTypeItem) {
    if (this.selfPicType == null) {
      this.selfPicType = new ArrayList<>();
    }
    this.selfPicType.add(selfPicTypeItem);
    return this;
  }

   /**
   * Get selfPicType
   * @return selfPicType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SELF_PIC_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SegmentType> getSelfPicType() {
    return selfPicType;
  }


  @JsonProperty(JSON_PROPERTY_SELF_PIC_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelfPicType(List<SegmentType> selfPicType) {
    this.selfPicType = selfPicType;
  }


  public SegmentPicDetailType pullPicType(List<SegmentType> pullPicType) {
    
    this.pullPicType = pullPicType;
    return this;
  }

  public SegmentPicDetailType addPullPicTypeItem(SegmentType pullPicTypeItem) {
    if (this.pullPicType == null) {
      this.pullPicType = new ArrayList<>();
    }
    this.pullPicType.add(pullPicTypeItem);
    return this;
  }

   /**
   * Get pullPicType
   * @return pullPicType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PULL_PIC_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SegmentType> getPullPicType() {
    return pullPicType;
  }


  @JsonProperty(JSON_PROPERTY_PULL_PIC_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPullPicType(List<SegmentType> pullPicType) {
    this.pullPicType = pullPicType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SegmentPicDetailType segmentPicDetailType = (SegmentPicDetailType) o;
    return Objects.equals(this.cssId, segmentPicDetailType.cssId) &&
        Objects.equals(this.picUrl, segmentPicDetailType.picUrl) &&
        Objects.equals(this.totalCount, segmentPicDetailType.totalCount) &&
        Objects.equals(this.countMap, segmentPicDetailType.countMap) &&
        Objects.equals(this.selfPicType, segmentPicDetailType.selfPicType) &&
        Objects.equals(this.pullPicType, segmentPicDetailType.pullPicType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cssId, picUrl, totalCount, countMap, selfPicType, pullPicType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SegmentPicDetailType {\n");
    sb.append("    cssId: ").append(toIndentedString(cssId)).append("\n");
    sb.append("    picUrl: ").append(toIndentedString(picUrl)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    countMap: ").append(toIndentedString(countMap)).append("\n");
    sb.append("    selfPicType: ").append(toIndentedString(selfPicType)).append("\n");
    sb.append("    pullPicType: ").append(toIndentedString(pullPicType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

