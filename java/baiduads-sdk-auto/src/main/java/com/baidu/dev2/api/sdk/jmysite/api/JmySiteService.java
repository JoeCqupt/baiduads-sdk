/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.baidu.dev2.api.sdk.jmysite.api;

import com.fasterxml.jackson.core.type.TypeReference;

import com.baidu.dev2.api.sdk.invoke.ApiException;
import com.baidu.dev2.api.sdk.invoke.ApiClient;
import com.baidu.dev2.api.sdk.invoke.Configuration;
import com.baidu.dev2.api.sdk.jmysite.model.*;
import com.baidu.dev2.api.sdk.invoke.Pair;

import com.baidu.dev2.api.sdk.jmysite.model.CreatePageRequestWrapper;
import com.baidu.dev2.api.sdk.jmysite.model.CreatePageResponseWrapper;
import com.baidu.dev2.api.sdk.jmysite.model.DeletePageRequestWrapper;
import com.baidu.dev2.api.sdk.jmysite.model.DeletePageResponseWrapper;
import com.baidu.dev2.api.sdk.jmysite.model.EditPageRequestWrapper;
import com.baidu.dev2.api.sdk.jmysite.model.EditPageResponseWrapper;
import com.baidu.dev2.api.sdk.jmysite.model.GetPageDetailRequestWrapper;
import com.baidu.dev2.api.sdk.jmysite.model.GetPageDetailResponseWrapper;
import com.baidu.dev2.api.sdk.jmysite.model.GetPageListRequestWrapper;
import com.baidu.dev2.api.sdk.jmysite.model.GetPageListResponseWrapper;
import com.baidu.dev2.api.sdk.jmysite.model.PreviewPageRequestWrapper;
import com.baidu.dev2.api.sdk.jmysite.model.PreviewPageResponseWrapper;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class JmySiteService {
  private ApiClient apiClient;

  public JmySiteService() {
    this(Configuration.getDefaultApiClient());
  }

  public JmySiteService(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * 
   * 
   * @param createPageRequestWrapper  (required)
   * @return CreatePageResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public CreatePageResponseWrapper createPage(CreatePageRequestWrapper createPageRequestWrapper) throws ApiException {
    Object localVarPostBody = createPageRequestWrapper;
    
    // verify the required parameter 'createPageRequestWrapper' is set
    if (createPageRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'createPageRequestWrapper' when calling createPage");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/JmySiteService/createPage";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<CreatePageResponseWrapper> localVarReturnType = new TypeReference<CreatePageResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param deletePageRequestWrapper  (required)
   * @return DeletePageResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public DeletePageResponseWrapper deletePage(DeletePageRequestWrapper deletePageRequestWrapper) throws ApiException {
    Object localVarPostBody = deletePageRequestWrapper;
    
    // verify the required parameter 'deletePageRequestWrapper' is set
    if (deletePageRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'deletePageRequestWrapper' when calling deletePage");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/JmySiteService/deletePage";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<DeletePageResponseWrapper> localVarReturnType = new TypeReference<DeletePageResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param editPageRequestWrapper  (required)
   * @return EditPageResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public EditPageResponseWrapper editPage(EditPageRequestWrapper editPageRequestWrapper) throws ApiException {
    Object localVarPostBody = editPageRequestWrapper;
    
    // verify the required parameter 'editPageRequestWrapper' is set
    if (editPageRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'editPageRequestWrapper' when calling editPage");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/JmySiteService/editPage";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<EditPageResponseWrapper> localVarReturnType = new TypeReference<EditPageResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param getPageDetailRequestWrapper  (required)
   * @return GetPageDetailResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public GetPageDetailResponseWrapper getPageDetail(GetPageDetailRequestWrapper getPageDetailRequestWrapper) throws ApiException {
    Object localVarPostBody = getPageDetailRequestWrapper;
    
    // verify the required parameter 'getPageDetailRequestWrapper' is set
    if (getPageDetailRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'getPageDetailRequestWrapper' when calling getPageDetail");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/JmySiteService/getPageDetail";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<GetPageDetailResponseWrapper> localVarReturnType = new TypeReference<GetPageDetailResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param getPageListRequestWrapper  (required)
   * @return GetPageListResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public GetPageListResponseWrapper getPageList(GetPageListRequestWrapper getPageListRequestWrapper) throws ApiException {
    Object localVarPostBody = getPageListRequestWrapper;
    
    // verify the required parameter 'getPageListRequestWrapper' is set
    if (getPageListRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'getPageListRequestWrapper' when calling getPageList");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/JmySiteService/getPageList";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<GetPageListResponseWrapper> localVarReturnType = new TypeReference<GetPageListResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param previewPageRequestWrapper  (required)
   * @return PreviewPageResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public PreviewPageResponseWrapper previewPage(PreviewPageRequestWrapper previewPageRequestWrapper) throws ApiException {
    Object localVarPostBody = previewPageRequestWrapper;
    
    // verify the required parameter 'previewPageRequestWrapper' is set
    if (previewPageRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'previewPageRequestWrapper' when calling previewPage");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/JmySiteService/previewPage";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<PreviewPageResponseWrapper> localVarReturnType = new TypeReference<PreviewPageResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
}
