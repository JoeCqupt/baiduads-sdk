/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.baidu.dev2.api.sdk.reportfeed.api;

import com.fasterxml.jackson.core.type.TypeReference;

import com.baidu.dev2.api.sdk.invoke.ApiException;
import com.baidu.dev2.api.sdk.invoke.ApiClient;
import com.baidu.dev2.api.sdk.invoke.Configuration;
import com.baidu.dev2.api.sdk.reportfeed.model.*;
import com.baidu.dev2.api.sdk.invoke.Pair;

import com.baidu.dev2.api.sdk.reportfeed.model.GetRealTimeFeedDataRequestWrapper;
import com.baidu.dev2.api.sdk.reportfeed.model.GetRealTimeFeedDataResponseWrapper;
import com.baidu.dev2.api.sdk.reportfeed.model.GetReportFeedFileUrlRequestWrapper;
import com.baidu.dev2.api.sdk.reportfeed.model.GetReportFeedFileUrlResponseWrapper;
import com.baidu.dev2.api.sdk.reportfeed.model.GetReportFeedIdRequestWrapper;
import com.baidu.dev2.api.sdk.reportfeed.model.GetReportFeedIdResponseWrapper;
import com.baidu.dev2.api.sdk.reportfeed.model.GetReportFeedStateRequestWrapper;
import com.baidu.dev2.api.sdk.reportfeed.model.GetReportFeedStateResponseWrapper;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ReportFeedService {
  private ApiClient apiClient;

  public ReportFeedService() {
    this(Configuration.getDefaultApiClient());
  }

  public ReportFeedService(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * 
   * 
   * @param getRealTimeFeedDataRequestWrapper  (required)
   * @return GetRealTimeFeedDataResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public GetRealTimeFeedDataResponseWrapper getRealTimeFeedData(GetRealTimeFeedDataRequestWrapper getRealTimeFeedDataRequestWrapper) throws ApiException {
    Object localVarPostBody = getRealTimeFeedDataRequestWrapper;
    
    // verify the required parameter 'getRealTimeFeedDataRequestWrapper' is set
    if (getRealTimeFeedDataRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'getRealTimeFeedDataRequestWrapper' when calling getRealTimeFeedData");
    }
    
    // create path and map variables
    String localVarPath = "/json/feed/v1/ReportFeedService/getRealTimeFeedData";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<GetRealTimeFeedDataResponseWrapper> localVarReturnType = new TypeReference<GetRealTimeFeedDataResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param getReportFeedFileUrlRequestWrapper  (required)
   * @return GetReportFeedFileUrlResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public GetReportFeedFileUrlResponseWrapper getReportFeedFileUrl(GetReportFeedFileUrlRequestWrapper getReportFeedFileUrlRequestWrapper) throws ApiException {
    Object localVarPostBody = getReportFeedFileUrlRequestWrapper;
    
    // verify the required parameter 'getReportFeedFileUrlRequestWrapper' is set
    if (getReportFeedFileUrlRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'getReportFeedFileUrlRequestWrapper' when calling getReportFeedFileUrl");
    }
    
    // create path and map variables
    String localVarPath = "/json/feed/v1/ReportFeedService/getReportFeedFileUrl";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<GetReportFeedFileUrlResponseWrapper> localVarReturnType = new TypeReference<GetReportFeedFileUrlResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param getReportFeedIdRequestWrapper  (required)
   * @return GetReportFeedIdResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public GetReportFeedIdResponseWrapper getReportFeedId(GetReportFeedIdRequestWrapper getReportFeedIdRequestWrapper) throws ApiException {
    Object localVarPostBody = getReportFeedIdRequestWrapper;
    
    // verify the required parameter 'getReportFeedIdRequestWrapper' is set
    if (getReportFeedIdRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'getReportFeedIdRequestWrapper' when calling getReportFeedId");
    }
    
    // create path and map variables
    String localVarPath = "/json/feed/v1/ReportFeedService/getReportFeedId";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<GetReportFeedIdResponseWrapper> localVarReturnType = new TypeReference<GetReportFeedIdResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param getReportFeedStateRequestWrapper  (required)
   * @return GetReportFeedStateResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public GetReportFeedStateResponseWrapper getReportFeedState(GetReportFeedStateRequestWrapper getReportFeedStateRequestWrapper) throws ApiException {
    Object localVarPostBody = getReportFeedStateRequestWrapper;
    
    // verify the required parameter 'getReportFeedStateRequestWrapper' is set
    if (getReportFeedStateRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'getReportFeedStateRequestWrapper' when calling getReportFeedState");
    }
    
    // create path and map variables
    String localVarPath = "/json/feed/v1/ReportFeedService/getReportFeedState";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<GetReportFeedStateResponseWrapper> localVarReturnType = new TypeReference<GetReportFeedStateResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
}
