/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.openapireport.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Sort
 */
@JsonPropertyOrder({
  Sort.JSON_PROPERTY_COLUMN,
  Sort.JSON_PROPERTY_SORT_RULE,
  Sort.JSON_PROPERTY_COMPARE_FIELD
})
@JsonTypeName("Sort")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Sort {
  public static final String JSON_PROPERTY_COLUMN = "column";
  private String column;

  public static final String JSON_PROPERTY_SORT_RULE = "sortRule";
  private String sortRule;

  public static final String JSON_PROPERTY_COMPARE_FIELD = "compareField";
  private String compareField;

  public Sort() { 
  }

  public Sort column(String column) {
    
    this.column = column;
    return this;
  }

   /**
   * Get column
   * @return column
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getColumn() {
    return column;
  }


  @JsonProperty(JSON_PROPERTY_COLUMN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setColumn(String column) {
    this.column = column;
  }


  public Sort sortRule(String sortRule) {
    
    this.sortRule = sortRule;
    return this;
  }

   /**
   * Get sortRule
   * @return sortRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SORT_RULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSortRule() {
    return sortRule;
  }


  @JsonProperty(JSON_PROPERTY_SORT_RULE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSortRule(String sortRule) {
    this.sortRule = sortRule;
  }


  public Sort compareField(String compareField) {
    
    this.compareField = compareField;
    return this;
  }

   /**
   * Get compareField
   * @return compareField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMPARE_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCompareField() {
    return compareField;
  }


  @JsonProperty(JSON_PROPERTY_COMPARE_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompareField(String compareField) {
    this.compareField = compareField;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Sort sort = (Sort) o;
    return Objects.equals(this.column, sort.column) &&
        Objects.equals(this.sortRule, sort.sortRule) &&
        Objects.equals(this.compareField, sort.compareField);
  }

  @Override
  public int hashCode() {
    return Objects.hash(column, sortRule, compareField);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Sort {\n");
    sb.append("    column: ").append(toIndentedString(column)).append("\n");
    sb.append("    sortRule: ").append(toIndentedString(sortRule)).append("\n");
    sb.append("    compareField: ").append(toIndentedString(compareField)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

