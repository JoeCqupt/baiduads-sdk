/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.baidu.dev2.api.sdk.adgroupimagesegmentbind.api;

import com.fasterxml.jackson.core.type.TypeReference;

import com.baidu.dev2.api.sdk.invoke.ApiException;
import com.baidu.dev2.api.sdk.invoke.ApiClient;
import com.baidu.dev2.api.sdk.invoke.Configuration;
import com.baidu.dev2.api.sdk.adgroupimagesegmentbind.model.*;
import com.baidu.dev2.api.sdk.invoke.Pair;

import com.baidu.dev2.api.sdk.adgroupimagesegmentbind.model.AddAdgroupImageSegmentBindRequestWrapper;
import com.baidu.dev2.api.sdk.adgroupimagesegmentbind.model.AddAdgroupImageSegmentBindResponseWrapper;
import com.baidu.dev2.api.sdk.adgroupimagesegmentbind.model.DeleteAdgroupImageSegmentBindRequestWrapper;
import com.baidu.dev2.api.sdk.adgroupimagesegmentbind.model.DeleteAdgroupImageSegmentBindResponseWrapper;
import com.baidu.dev2.api.sdk.adgroupimagesegmentbind.model.GetAdgroupImageSegmentBindRequestWrapper;
import com.baidu.dev2.api.sdk.adgroupimagesegmentbind.model.GetAdgroupImageSegmentBindResponseWrapper;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AdgroupImageSegmentBindService {
  private ApiClient apiClient;

  public AdgroupImageSegmentBindService() {
    this(Configuration.getDefaultApiClient());
  }

  public AdgroupImageSegmentBindService(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * 
   * 
   * @param addAdgroupImageSegmentBindRequestWrapper  (required)
   * @return AddAdgroupImageSegmentBindResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public AddAdgroupImageSegmentBindResponseWrapper addAdgroupImageSegmentBind(AddAdgroupImageSegmentBindRequestWrapper addAdgroupImageSegmentBindRequestWrapper) throws ApiException {
    Object localVarPostBody = addAdgroupImageSegmentBindRequestWrapper;
    
    // verify the required parameter 'addAdgroupImageSegmentBindRequestWrapper' is set
    if (addAdgroupImageSegmentBindRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'addAdgroupImageSegmentBindRequestWrapper' when calling addAdgroupImageSegmentBind");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/AdgroupImageSegmentBindService/addAdgroupImageSegmentBind";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<AddAdgroupImageSegmentBindResponseWrapper> localVarReturnType = new TypeReference<AddAdgroupImageSegmentBindResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param deleteAdgroupImageSegmentBindRequestWrapper  (required)
   * @return DeleteAdgroupImageSegmentBindResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public DeleteAdgroupImageSegmentBindResponseWrapper deleteAdgroupImageSegmentBind(DeleteAdgroupImageSegmentBindRequestWrapper deleteAdgroupImageSegmentBindRequestWrapper) throws ApiException {
    Object localVarPostBody = deleteAdgroupImageSegmentBindRequestWrapper;
    
    // verify the required parameter 'deleteAdgroupImageSegmentBindRequestWrapper' is set
    if (deleteAdgroupImageSegmentBindRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'deleteAdgroupImageSegmentBindRequestWrapper' when calling deleteAdgroupImageSegmentBind");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/AdgroupImageSegmentBindService/deleteAdgroupImageSegmentBind";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<DeleteAdgroupImageSegmentBindResponseWrapper> localVarReturnType = new TypeReference<DeleteAdgroupImageSegmentBindResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param getAdgroupImageSegmentBindRequestWrapper  (required)
   * @return GetAdgroupImageSegmentBindResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public GetAdgroupImageSegmentBindResponseWrapper getAdgroupImageSegmentBind(GetAdgroupImageSegmentBindRequestWrapper getAdgroupImageSegmentBindRequestWrapper) throws ApiException {
    Object localVarPostBody = getAdgroupImageSegmentBindRequestWrapper;
    
    // verify the required parameter 'getAdgroupImageSegmentBindRequestWrapper' is set
    if (getAdgroupImageSegmentBindRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'getAdgroupImageSegmentBindRequestWrapper' when calling getAdgroupImageSegmentBind");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/AdgroupImageSegmentBindService/getAdgroupImageSegmentBind";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<GetAdgroupImageSegmentBindResponseWrapper> localVarReturnType = new TypeReference<GetAdgroupImageSegmentBindResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
}
