/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.shieldfunction.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ShieldCondition
 */
@JsonPropertyOrder({
  ShieldCondition.JSON_PROPERTY_POLICY_IDS,
  ShieldCondition.JSON_PROPERTY_POLICY_NAME,
  ShieldCondition.JSON_PROPERTY_IS_DEL,
  ShieldCondition.JSON_PROPERTY_POLICY_TYPE,
  ShieldCondition.JSON_PROPERTY_IPLIKE
})
@JsonTypeName("ShieldCondition")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ShieldCondition {
  public static final String JSON_PROPERTY_POLICY_IDS = "policyIds";
  private List<Long> policyIds = null;

  public static final String JSON_PROPERTY_POLICY_NAME = "policyName";
  private String policyName;

  public static final String JSON_PROPERTY_IS_DEL = "isDel";
  private Boolean isDel;

  public static final String JSON_PROPERTY_POLICY_TYPE = "policyType";
  private Integer policyType;

  public static final String JSON_PROPERTY_IPLIKE = "iplike";
  private String iplike;

  public ShieldCondition() { 
  }

  public ShieldCondition policyIds(List<Long> policyIds) {
    
    this.policyIds = policyIds;
    return this;
  }

  public ShieldCondition addPolicyIdsItem(Long policyIdsItem) {
    if (this.policyIds == null) {
      this.policyIds = new ArrayList<>();
    }
    this.policyIds.add(policyIdsItem);
    return this;
  }

   /**
   * Get policyIds
   * @return policyIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_POLICY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Long> getPolicyIds() {
    return policyIds;
  }


  @JsonProperty(JSON_PROPERTY_POLICY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPolicyIds(List<Long> policyIds) {
    this.policyIds = policyIds;
  }


  public ShieldCondition policyName(String policyName) {
    
    this.policyName = policyName;
    return this;
  }

   /**
   * Get policyName
   * @return policyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_POLICY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPolicyName() {
    return policyName;
  }


  @JsonProperty(JSON_PROPERTY_POLICY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPolicyName(String policyName) {
    this.policyName = policyName;
  }


  public ShieldCondition isDel(Boolean isDel) {
    
    this.isDel = isDel;
    return this;
  }

   /**
   * Get isDel
   * @return isDel
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IS_DEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDel() {
    return isDel;
  }


  @JsonProperty(JSON_PROPERTY_IS_DEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDel(Boolean isDel) {
    this.isDel = isDel;
  }


  public ShieldCondition policyType(Integer policyType) {
    
    this.policyType = policyType;
    return this;
  }

   /**
   * Get policyType
   * @return policyType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_POLICY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getPolicyType() {
    return policyType;
  }


  @JsonProperty(JSON_PROPERTY_POLICY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPolicyType(Integer policyType) {
    this.policyType = policyType;
  }


  public ShieldCondition iplike(String iplike) {
    
    this.iplike = iplike;
    return this;
  }

   /**
   * Get iplike
   * @return iplike
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IPLIKE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIplike() {
    return iplike;
  }


  @JsonProperty(JSON_PROPERTY_IPLIKE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIplike(String iplike) {
    this.iplike = iplike;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShieldCondition shieldCondition = (ShieldCondition) o;
    return Objects.equals(this.policyIds, shieldCondition.policyIds) &&
        Objects.equals(this.policyName, shieldCondition.policyName) &&
        Objects.equals(this.isDel, shieldCondition.isDel) &&
        Objects.equals(this.policyType, shieldCondition.policyType) &&
        Objects.equals(this.iplike, shieldCondition.iplike);
  }

  @Override
  public int hashCode() {
    return Objects.hash(policyIds, policyName, isDel, policyType, iplike);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShieldCondition {\n");
    sb.append("    policyIds: ").append(toIndentedString(policyIds)).append("\n");
    sb.append("    policyName: ").append(toIndentedString(policyName)).append("\n");
    sb.append("    isDel: ").append(toIndentedString(isDel)).append("\n");
    sb.append("    policyType: ").append(toIndentedString(policyType)).append("\n");
    sb.append("    iplike: ").append(toIndentedString(iplike)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

