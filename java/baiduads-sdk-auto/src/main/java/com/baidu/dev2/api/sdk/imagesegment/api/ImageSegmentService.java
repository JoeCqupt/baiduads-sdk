/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.baidu.dev2.api.sdk.imagesegment.api;

import com.fasterxml.jackson.core.type.TypeReference;

import com.baidu.dev2.api.sdk.invoke.ApiException;
import com.baidu.dev2.api.sdk.invoke.ApiClient;
import com.baidu.dev2.api.sdk.invoke.Configuration;
import com.baidu.dev2.api.sdk.imagesegment.model.*;
import com.baidu.dev2.api.sdk.invoke.Pair;

import com.baidu.dev2.api.sdk.imagesegment.model.AddImageSegmentRequestWrapper;
import com.baidu.dev2.api.sdk.imagesegment.model.AddImageSegmentResponseWrapper;
import com.baidu.dev2.api.sdk.imagesegment.model.DeleteImageSegmentRequestWrapper;
import com.baidu.dev2.api.sdk.imagesegment.model.DeleteImageSegmentResponseWrapper;
import com.baidu.dev2.api.sdk.imagesegment.model.GetImageSegmentRequestWrapper;
import com.baidu.dev2.api.sdk.imagesegment.model.GetImageSegmentResponseWrapper;
import com.baidu.dev2.api.sdk.imagesegment.model.UpdateImageSegmentRequestWrapper;
import com.baidu.dev2.api.sdk.imagesegment.model.UpdateImageSegmentResponseWrapper;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ImageSegmentService {
  private ApiClient apiClient;

  public ImageSegmentService() {
    this(Configuration.getDefaultApiClient());
  }

  public ImageSegmentService(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * 
   * 
   * @param addImageSegmentRequestWrapper  (required)
   * @return AddImageSegmentResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public AddImageSegmentResponseWrapper addImageSegment(AddImageSegmentRequestWrapper addImageSegmentRequestWrapper) throws ApiException {
    Object localVarPostBody = addImageSegmentRequestWrapper;
    
    // verify the required parameter 'addImageSegmentRequestWrapper' is set
    if (addImageSegmentRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'addImageSegmentRequestWrapper' when calling addImageSegment");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/ImageSegmentService/addImageSegment";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<AddImageSegmentResponseWrapper> localVarReturnType = new TypeReference<AddImageSegmentResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param deleteImageSegmentRequestWrapper  (required)
   * @return DeleteImageSegmentResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public DeleteImageSegmentResponseWrapper deleteImageSegment(DeleteImageSegmentRequestWrapper deleteImageSegmentRequestWrapper) throws ApiException {
    Object localVarPostBody = deleteImageSegmentRequestWrapper;
    
    // verify the required parameter 'deleteImageSegmentRequestWrapper' is set
    if (deleteImageSegmentRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'deleteImageSegmentRequestWrapper' when calling deleteImageSegment");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/ImageSegmentService/deleteImageSegment";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<DeleteImageSegmentResponseWrapper> localVarReturnType = new TypeReference<DeleteImageSegmentResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param getImageSegmentRequestWrapper  (required)
   * @return GetImageSegmentResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public GetImageSegmentResponseWrapper getImageSegment(GetImageSegmentRequestWrapper getImageSegmentRequestWrapper) throws ApiException {
    Object localVarPostBody = getImageSegmentRequestWrapper;
    
    // verify the required parameter 'getImageSegmentRequestWrapper' is set
    if (getImageSegmentRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'getImageSegmentRequestWrapper' when calling getImageSegment");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/ImageSegmentService/getImageSegment";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<GetImageSegmentResponseWrapper> localVarReturnType = new TypeReference<GetImageSegmentResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param updateImageSegmentRequestWrapper  (required)
   * @return UpdateImageSegmentResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public UpdateImageSegmentResponseWrapper updateImageSegment(UpdateImageSegmentRequestWrapper updateImageSegmentRequestWrapper) throws ApiException {
    Object localVarPostBody = updateImageSegmentRequestWrapper;
    
    // verify the required parameter 'updateImageSegmentRequestWrapper' is set
    if (updateImageSegmentRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'updateImageSegmentRequestWrapper' when calling updateImageSegment");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/ImageSegmentService/updateImageSegment";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<UpdateImageSegmentResponseWrapper> localVarReturnType = new TypeReference<UpdateImageSegmentResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
}
