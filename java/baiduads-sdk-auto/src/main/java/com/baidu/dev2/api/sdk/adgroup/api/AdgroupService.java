/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.baidu.dev2.api.sdk.adgroup.api;

import com.fasterxml.jackson.core.type.TypeReference;

import com.baidu.dev2.api.sdk.invoke.ApiException;
import com.baidu.dev2.api.sdk.invoke.ApiClient;
import com.baidu.dev2.api.sdk.invoke.Configuration;
import com.baidu.dev2.api.sdk.adgroup.model.*;
import com.baidu.dev2.api.sdk.invoke.Pair;

import com.baidu.dev2.api.sdk.adgroup.model.AddAdgroupRequestWrapper;
import com.baidu.dev2.api.sdk.adgroup.model.AddAdgroupResponseWrapper;
import com.baidu.dev2.api.sdk.adgroup.model.DeleteAdgroupRequestWrapper;
import com.baidu.dev2.api.sdk.adgroup.model.DeleteAdgroupResponseWrapper;
import com.baidu.dev2.api.sdk.adgroup.model.GetAdgroupRequestWrapper;
import com.baidu.dev2.api.sdk.adgroup.model.GetAdgroupResponseWrapper;
import com.baidu.dev2.api.sdk.adgroup.model.UpdateAdgroupRequestWrapper;
import com.baidu.dev2.api.sdk.adgroup.model.UpdateAdgroupResponseWrapper;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AdgroupService {
  private ApiClient apiClient;

  public AdgroupService() {
    this(Configuration.getDefaultApiClient());
  }

  public AdgroupService(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * 
   * 
   * @param addAdgroupRequestWrapper  (required)
   * @return AddAdgroupResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public AddAdgroupResponseWrapper addAdgroup(AddAdgroupRequestWrapper addAdgroupRequestWrapper) throws ApiException {
    Object localVarPostBody = addAdgroupRequestWrapper;
    
    // verify the required parameter 'addAdgroupRequestWrapper' is set
    if (addAdgroupRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'addAdgroupRequestWrapper' when calling addAdgroup");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/AdgroupService/addAdgroup";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<AddAdgroupResponseWrapper> localVarReturnType = new TypeReference<AddAdgroupResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param deleteAdgroupRequestWrapper  (required)
   * @return DeleteAdgroupResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public DeleteAdgroupResponseWrapper deleteAdgroup(DeleteAdgroupRequestWrapper deleteAdgroupRequestWrapper) throws ApiException {
    Object localVarPostBody = deleteAdgroupRequestWrapper;
    
    // verify the required parameter 'deleteAdgroupRequestWrapper' is set
    if (deleteAdgroupRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'deleteAdgroupRequestWrapper' when calling deleteAdgroup");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/AdgroupService/deleteAdgroup";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<DeleteAdgroupResponseWrapper> localVarReturnType = new TypeReference<DeleteAdgroupResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param getAdgroupRequestWrapper  (required)
   * @return GetAdgroupResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public GetAdgroupResponseWrapper getAdgroup(GetAdgroupRequestWrapper getAdgroupRequestWrapper) throws ApiException {
    Object localVarPostBody = getAdgroupRequestWrapper;
    
    // verify the required parameter 'getAdgroupRequestWrapper' is set
    if (getAdgroupRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'getAdgroupRequestWrapper' when calling getAdgroup");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/AdgroupService/getAdgroup";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<GetAdgroupResponseWrapper> localVarReturnType = new TypeReference<GetAdgroupResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param updateAdgroupRequestWrapper  (required)
   * @return UpdateAdgroupResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public UpdateAdgroupResponseWrapper updateAdgroup(UpdateAdgroupRequestWrapper updateAdgroupRequestWrapper) throws ApiException {
    Object localVarPostBody = updateAdgroupRequestWrapper;
    
    // verify the required parameter 'updateAdgroupRequestWrapper' is set
    if (updateAdgroupRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'updateAdgroupRequestWrapper' when calling updateAdgroup");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/AdgroupService/updateAdgroup";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<UpdateAdgroupResponseWrapper> localVarReturnType = new TypeReference<UpdateAdgroupResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
}
