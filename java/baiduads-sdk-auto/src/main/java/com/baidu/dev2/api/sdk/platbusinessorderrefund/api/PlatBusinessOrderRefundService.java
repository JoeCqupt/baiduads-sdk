/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.baidu.dev2.api.sdk.platbusinessorderrefund.api;

import com.fasterxml.jackson.core.type.TypeReference;

import com.baidu.dev2.api.sdk.invoke.ApiException;
import com.baidu.dev2.api.sdk.invoke.ApiClient;
import com.baidu.dev2.api.sdk.invoke.Configuration;
import com.baidu.dev2.api.sdk.platbusinessorderrefund.model.*;
import com.baidu.dev2.api.sdk.invoke.Pair;

import com.baidu.dev2.api.sdk.platbusinessorderrefund.model.AgreeOrderRefundRequestWrapper;
import com.baidu.dev2.api.sdk.platbusinessorderrefund.model.AgreeOrderRefundResponseWrapper;
import com.baidu.dev2.api.sdk.platbusinessorderrefund.model.AgreeOrderReturnRequestWrapper;
import com.baidu.dev2.api.sdk.platbusinessorderrefund.model.AgreeOrderReturnResponseWrapper;
import com.baidu.dev2.api.sdk.platbusinessorderrefund.model.QueryOrderRefundInfoRequestWrapper;
import com.baidu.dev2.api.sdk.platbusinessorderrefund.model.QueryOrderRefundInfoResponseWrapper;
import com.baidu.dev2.api.sdk.platbusinessorderrefund.model.QueryOrderRefundListRequestWrapper;
import com.baidu.dev2.api.sdk.platbusinessorderrefund.model.QueryOrderRefundListResponseWrapper;
import com.baidu.dev2.api.sdk.platbusinessorderrefund.model.RejectOrderRefundRequestWrapper;
import com.baidu.dev2.api.sdk.platbusinessorderrefund.model.RejectOrderRefundResponseWrapper;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PlatBusinessOrderRefundService {
  private ApiClient apiClient;

  public PlatBusinessOrderRefundService() {
    this(Configuration.getDefaultApiClient());
  }

  public PlatBusinessOrderRefundService(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * 
   * 
   * @param agreeOrderRefundRequestWrapper  (required)
   * @return AgreeOrderRefundResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public AgreeOrderRefundResponseWrapper agreeOrderRefund(AgreeOrderRefundRequestWrapper agreeOrderRefundRequestWrapper) throws ApiException {
    Object localVarPostBody = agreeOrderRefundRequestWrapper;
    
    // verify the required parameter 'agreeOrderRefundRequestWrapper' is set
    if (agreeOrderRefundRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'agreeOrderRefundRequestWrapper' when calling agreeOrderRefund");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/PlatBusinessOrderRefundService/agreeOrderRefund";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<AgreeOrderRefundResponseWrapper> localVarReturnType = new TypeReference<AgreeOrderRefundResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param agreeOrderReturnRequestWrapper  (required)
   * @return AgreeOrderReturnResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public AgreeOrderReturnResponseWrapper agreeOrderReturn(AgreeOrderReturnRequestWrapper agreeOrderReturnRequestWrapper) throws ApiException {
    Object localVarPostBody = agreeOrderReturnRequestWrapper;
    
    // verify the required parameter 'agreeOrderReturnRequestWrapper' is set
    if (agreeOrderReturnRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'agreeOrderReturnRequestWrapper' when calling agreeOrderReturn");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/PlatBusinessOrderRefundService/agreeOrderReturn";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<AgreeOrderReturnResponseWrapper> localVarReturnType = new TypeReference<AgreeOrderReturnResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param queryOrderRefundInfoRequestWrapper  (required)
   * @return QueryOrderRefundInfoResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public QueryOrderRefundInfoResponseWrapper queryOrderRefundInfo(QueryOrderRefundInfoRequestWrapper queryOrderRefundInfoRequestWrapper) throws ApiException {
    Object localVarPostBody = queryOrderRefundInfoRequestWrapper;
    
    // verify the required parameter 'queryOrderRefundInfoRequestWrapper' is set
    if (queryOrderRefundInfoRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'queryOrderRefundInfoRequestWrapper' when calling queryOrderRefundInfo");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/PlatBusinessOrderRefundService/queryOrderRefundInfo";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<QueryOrderRefundInfoResponseWrapper> localVarReturnType = new TypeReference<QueryOrderRefundInfoResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param queryOrderRefundListRequestWrapper  (required)
   * @return QueryOrderRefundListResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public QueryOrderRefundListResponseWrapper queryOrderRefundList(QueryOrderRefundListRequestWrapper queryOrderRefundListRequestWrapper) throws ApiException {
    Object localVarPostBody = queryOrderRefundListRequestWrapper;
    
    // verify the required parameter 'queryOrderRefundListRequestWrapper' is set
    if (queryOrderRefundListRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'queryOrderRefundListRequestWrapper' when calling queryOrderRefundList");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/PlatBusinessOrderRefundService/queryOrderRefundList";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<QueryOrderRefundListResponseWrapper> localVarReturnType = new TypeReference<QueryOrderRefundListResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param rejectOrderRefundRequestWrapper  (required)
   * @return RejectOrderRefundResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public RejectOrderRefundResponseWrapper rejectOrderRefund(RejectOrderRefundRequestWrapper rejectOrderRefundRequestWrapper) throws ApiException {
    Object localVarPostBody = rejectOrderRefundRequestWrapper;
    
    // verify the required parameter 'rejectOrderRefundRequestWrapper' is set
    if (rejectOrderRefundRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'rejectOrderRefundRequestWrapper' when calling rejectOrderRefund");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/PlatBusinessOrderRefundService/rejectOrderRefund";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<RejectOrderRefundResponseWrapper> localVarReturnType = new TypeReference<RejectOrderRefundResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
}
