/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.negativeword.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * NegativeWordPacket
 */
@JsonPropertyOrder({
  NegativeWordPacket.JSON_PROPERTY_NEGATIVE_WORD_PACKET_ID,
  NegativeWordPacket.JSON_PROPERTY_NEGATIVE_WORD_PACKET_NAME,
  NegativeWordPacket.JSON_PROPERTY_NEGATIVE_WORDS,
  NegativeWordPacket.JSON_PROPERTY_EXACT_NEGATIVE_WORDS
})
@JsonTypeName("NegativeWordPacket")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class NegativeWordPacket {
  public static final String JSON_PROPERTY_NEGATIVE_WORD_PACKET_ID = "negativeWordPacketId";
  private Long negativeWordPacketId;

  public static final String JSON_PROPERTY_NEGATIVE_WORD_PACKET_NAME = "negativeWordPacketName";
  private String negativeWordPacketName;

  public static final String JSON_PROPERTY_NEGATIVE_WORDS = "negativeWords";
  private List<String> negativeWords = null;

  public static final String JSON_PROPERTY_EXACT_NEGATIVE_WORDS = "exactNegativeWords";
  private List<String> exactNegativeWords = null;

  public NegativeWordPacket() { 
  }

  public NegativeWordPacket negativeWordPacketId(Long negativeWordPacketId) {
    
    this.negativeWordPacketId = negativeWordPacketId;
    return this;
  }

   /**
   * Get negativeWordPacketId
   * @return negativeWordPacketId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NEGATIVE_WORD_PACKET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getNegativeWordPacketId() {
    return negativeWordPacketId;
  }


  @JsonProperty(JSON_PROPERTY_NEGATIVE_WORD_PACKET_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNegativeWordPacketId(Long negativeWordPacketId) {
    this.negativeWordPacketId = negativeWordPacketId;
  }


  public NegativeWordPacket negativeWordPacketName(String negativeWordPacketName) {
    
    this.negativeWordPacketName = negativeWordPacketName;
    return this;
  }

   /**
   * Get negativeWordPacketName
   * @return negativeWordPacketName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NEGATIVE_WORD_PACKET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNegativeWordPacketName() {
    return negativeWordPacketName;
  }


  @JsonProperty(JSON_PROPERTY_NEGATIVE_WORD_PACKET_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNegativeWordPacketName(String negativeWordPacketName) {
    this.negativeWordPacketName = negativeWordPacketName;
  }


  public NegativeWordPacket negativeWords(List<String> negativeWords) {
    
    this.negativeWords = negativeWords;
    return this;
  }

  public NegativeWordPacket addNegativeWordsItem(String negativeWordsItem) {
    if (this.negativeWords == null) {
      this.negativeWords = new ArrayList<>();
    }
    this.negativeWords.add(negativeWordsItem);
    return this;
  }

   /**
   * Get negativeWords
   * @return negativeWords
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NEGATIVE_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getNegativeWords() {
    return negativeWords;
  }


  @JsonProperty(JSON_PROPERTY_NEGATIVE_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNegativeWords(List<String> negativeWords) {
    this.negativeWords = negativeWords;
  }


  public NegativeWordPacket exactNegativeWords(List<String> exactNegativeWords) {
    
    this.exactNegativeWords = exactNegativeWords;
    return this;
  }

  public NegativeWordPacket addExactNegativeWordsItem(String exactNegativeWordsItem) {
    if (this.exactNegativeWords == null) {
      this.exactNegativeWords = new ArrayList<>();
    }
    this.exactNegativeWords.add(exactNegativeWordsItem);
    return this;
  }

   /**
   * Get exactNegativeWords
   * @return exactNegativeWords
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXACT_NEGATIVE_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getExactNegativeWords() {
    return exactNegativeWords;
  }


  @JsonProperty(JSON_PROPERTY_EXACT_NEGATIVE_WORDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExactNegativeWords(List<String> exactNegativeWords) {
    this.exactNegativeWords = exactNegativeWords;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NegativeWordPacket negativeWordPacket = (NegativeWordPacket) o;
    return Objects.equals(this.negativeWordPacketId, negativeWordPacket.negativeWordPacketId) &&
        Objects.equals(this.negativeWordPacketName, negativeWordPacket.negativeWordPacketName) &&
        Objects.equals(this.negativeWords, negativeWordPacket.negativeWords) &&
        Objects.equals(this.exactNegativeWords, negativeWordPacket.exactNegativeWords);
  }

  @Override
  public int hashCode() {
    return Objects.hash(negativeWordPacketId, negativeWordPacketName, negativeWords, exactNegativeWords);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NegativeWordPacket {\n");
    sb.append("    negativeWordPacketId: ").append(toIndentedString(negativeWordPacketId)).append("\n");
    sb.append("    negativeWordPacketName: ").append(toIndentedString(negativeWordPacketName)).append("\n");
    sb.append("    negativeWords: ").append(toIndentedString(negativeWords)).append("\n");
    sb.append("    exactNegativeWords: ").append(toIndentedString(exactNegativeWords)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

