/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.report.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * RealTimeQueryResultType
 */
@JsonPropertyOrder({
  RealTimeQueryResultType.JSON_PROPERTY_QUERY,
  RealTimeQueryResultType.JSON_PROPERTY_QUERY_INFO,
  RealTimeQueryResultType.JSON_PROPERTY_KEYWORD_ID,
  RealTimeQueryResultType.JSON_PROPERTY_CREATIVE_ID,
  RealTimeQueryResultType.JSON_PROPERTY_PAIR_INFO,
  RealTimeQueryResultType.JSON_PROPERTY_DATE,
  RealTimeQueryResultType.JSON_PROPERTY_KP_IS
})
@JsonTypeName("RealTimeQueryResultType")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class RealTimeQueryResultType {
  public static final String JSON_PROPERTY_QUERY = "query";
  private String query;

  public static final String JSON_PROPERTY_QUERY_INFO = "queryInfo";
  private List<String> queryInfo = null;

  public static final String JSON_PROPERTY_KEYWORD_ID = "keywordId";
  private Long keywordId;

  public static final String JSON_PROPERTY_CREATIVE_ID = "creativeId";
  private Long creativeId;

  public static final String JSON_PROPERTY_PAIR_INFO = "pairInfo";
  private List<String> pairInfo = null;

  public static final String JSON_PROPERTY_DATE = "date";
  private String date;

  public static final String JSON_PROPERTY_KP_IS = "KPIs";
  private List<String> kpIs = null;

  public RealTimeQueryResultType() { 
  }

  public RealTimeQueryResultType query(String query) {
    
    this.query = query;
    return this;
  }

   /**
   * Get query
   * @return query
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_QUERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getQuery() {
    return query;
  }


  @JsonProperty(JSON_PROPERTY_QUERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuery(String query) {
    this.query = query;
  }


  public RealTimeQueryResultType queryInfo(List<String> queryInfo) {
    
    this.queryInfo = queryInfo;
    return this;
  }

  public RealTimeQueryResultType addQueryInfoItem(String queryInfoItem) {
    if (this.queryInfo == null) {
      this.queryInfo = new ArrayList<>();
    }
    this.queryInfo.add(queryInfoItem);
    return this;
  }

   /**
   * Get queryInfo
   * @return queryInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_QUERY_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getQueryInfo() {
    return queryInfo;
  }


  @JsonProperty(JSON_PROPERTY_QUERY_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQueryInfo(List<String> queryInfo) {
    this.queryInfo = queryInfo;
  }


  public RealTimeQueryResultType keywordId(Long keywordId) {
    
    this.keywordId = keywordId;
    return this;
  }

   /**
   * Get keywordId
   * @return keywordId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_KEYWORD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getKeywordId() {
    return keywordId;
  }


  @JsonProperty(JSON_PROPERTY_KEYWORD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeywordId(Long keywordId) {
    this.keywordId = keywordId;
  }


  public RealTimeQueryResultType creativeId(Long creativeId) {
    
    this.creativeId = creativeId;
    return this;
  }

   /**
   * Get creativeId
   * @return creativeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATIVE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCreativeId() {
    return creativeId;
  }


  @JsonProperty(JSON_PROPERTY_CREATIVE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreativeId(Long creativeId) {
    this.creativeId = creativeId;
  }


  public RealTimeQueryResultType pairInfo(List<String> pairInfo) {
    
    this.pairInfo = pairInfo;
    return this;
  }

  public RealTimeQueryResultType addPairInfoItem(String pairInfoItem) {
    if (this.pairInfo == null) {
      this.pairInfo = new ArrayList<>();
    }
    this.pairInfo.add(pairInfoItem);
    return this;
  }

   /**
   * Get pairInfo
   * @return pairInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PAIR_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getPairInfo() {
    return pairInfo;
  }


  @JsonProperty(JSON_PROPERTY_PAIR_INFO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPairInfo(List<String> pairInfo) {
    this.pairInfo = pairInfo;
  }


  public RealTimeQueryResultType date(String date) {
    
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDate() {
    return date;
  }


  @JsonProperty(JSON_PROPERTY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDate(String date) {
    this.date = date;
  }


  public RealTimeQueryResultType kpIs(List<String> kpIs) {
    
    this.kpIs = kpIs;
    return this;
  }

  public RealTimeQueryResultType addKpIsItem(String kpIsItem) {
    if (this.kpIs == null) {
      this.kpIs = new ArrayList<>();
    }
    this.kpIs.add(kpIsItem);
    return this;
  }

   /**
   * Get kpIs
   * @return kpIs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_KP_IS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getKpIs() {
    return kpIs;
  }


  @JsonProperty(JSON_PROPERTY_KP_IS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKpIs(List<String> kpIs) {
    this.kpIs = kpIs;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RealTimeQueryResultType realTimeQueryResultType = (RealTimeQueryResultType) o;
    return Objects.equals(this.query, realTimeQueryResultType.query) &&
        Objects.equals(this.queryInfo, realTimeQueryResultType.queryInfo) &&
        Objects.equals(this.keywordId, realTimeQueryResultType.keywordId) &&
        Objects.equals(this.creativeId, realTimeQueryResultType.creativeId) &&
        Objects.equals(this.pairInfo, realTimeQueryResultType.pairInfo) &&
        Objects.equals(this.date, realTimeQueryResultType.date) &&
        Objects.equals(this.kpIs, realTimeQueryResultType.kpIs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(query, queryInfo, keywordId, creativeId, pairInfo, date, kpIs);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RealTimeQueryResultType {\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    queryInfo: ").append(toIndentedString(queryInfo)).append("\n");
    sb.append("    keywordId: ").append(toIndentedString(keywordId)).append("\n");
    sb.append("    creativeId: ").append(toIndentedString(creativeId)).append("\n");
    sb.append("    pairInfo: ").append(toIndentedString(pairInfo)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    kpIs: ").append(toIndentedString(kpIs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

