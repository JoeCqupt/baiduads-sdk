/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.baidu.dev2.api.sdk.adgroupfeed.api;

import com.fasterxml.jackson.core.type.TypeReference;

import com.baidu.dev2.api.sdk.invoke.ApiException;
import com.baidu.dev2.api.sdk.invoke.ApiClient;
import com.baidu.dev2.api.sdk.invoke.Configuration;
import com.baidu.dev2.api.sdk.adgroupfeed.model.*;
import com.baidu.dev2.api.sdk.invoke.Pair;

import com.baidu.dev2.api.sdk.adgroupfeed.model.AddAdgroupFeedRequestWrapper;
import com.baidu.dev2.api.sdk.adgroupfeed.model.AddAdgroupFeedResponseWrapper;
import com.baidu.dev2.api.sdk.adgroupfeed.model.DeleteAdgroupFeedRequestWrapper;
import com.baidu.dev2.api.sdk.adgroupfeed.model.DeleteAdgroupFeedResponseWrapper;
import com.baidu.dev2.api.sdk.adgroupfeed.model.GetAdgroupFeedRequestWrapper;
import com.baidu.dev2.api.sdk.adgroupfeed.model.GetAdgroupFeedResponseWrapper;
import com.baidu.dev2.api.sdk.adgroupfeed.model.UpdateAdgroupFeedRequestWrapper;
import com.baidu.dev2.api.sdk.adgroupfeed.model.UpdateAdgroupFeedResponseWrapper;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AdgroupFeedService {
  private ApiClient apiClient;

  public AdgroupFeedService() {
    this(Configuration.getDefaultApiClient());
  }

  public AdgroupFeedService(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * 
   * 
   * @param addAdgroupFeedRequestWrapper  (required)
   * @return AddAdgroupFeedResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public AddAdgroupFeedResponseWrapper addAdgroupFeed(AddAdgroupFeedRequestWrapper addAdgroupFeedRequestWrapper) throws ApiException {
    Object localVarPostBody = addAdgroupFeedRequestWrapper;
    
    // verify the required parameter 'addAdgroupFeedRequestWrapper' is set
    if (addAdgroupFeedRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'addAdgroupFeedRequestWrapper' when calling addAdgroupFeed");
    }
    
    // create path and map variables
    String localVarPath = "/json/feed/v1/AdgroupFeedService/addAdgroupFeed";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<AddAdgroupFeedResponseWrapper> localVarReturnType = new TypeReference<AddAdgroupFeedResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param deleteAdgroupFeedRequestWrapper  (required)
   * @return DeleteAdgroupFeedResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public DeleteAdgroupFeedResponseWrapper deleteAdgroupFeed(DeleteAdgroupFeedRequestWrapper deleteAdgroupFeedRequestWrapper) throws ApiException {
    Object localVarPostBody = deleteAdgroupFeedRequestWrapper;
    
    // verify the required parameter 'deleteAdgroupFeedRequestWrapper' is set
    if (deleteAdgroupFeedRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'deleteAdgroupFeedRequestWrapper' when calling deleteAdgroupFeed");
    }
    
    // create path and map variables
    String localVarPath = "/json/feed/v1/AdgroupFeedService/deleteAdgroupFeed";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<DeleteAdgroupFeedResponseWrapper> localVarReturnType = new TypeReference<DeleteAdgroupFeedResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param getAdgroupFeedRequestWrapper  (required)
   * @return GetAdgroupFeedResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public GetAdgroupFeedResponseWrapper getAdgroupFeed(GetAdgroupFeedRequestWrapper getAdgroupFeedRequestWrapper) throws ApiException {
    Object localVarPostBody = getAdgroupFeedRequestWrapper;
    
    // verify the required parameter 'getAdgroupFeedRequestWrapper' is set
    if (getAdgroupFeedRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'getAdgroupFeedRequestWrapper' when calling getAdgroupFeed");
    }
    
    // create path and map variables
    String localVarPath = "/json/feed/v1/AdgroupFeedService/getAdgroupFeed";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<GetAdgroupFeedResponseWrapper> localVarReturnType = new TypeReference<GetAdgroupFeedResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param updateAdgroupFeedRequestWrapper  (required)
   * @return UpdateAdgroupFeedResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public UpdateAdgroupFeedResponseWrapper updateAdgroupFeed(UpdateAdgroupFeedRequestWrapper updateAdgroupFeedRequestWrapper) throws ApiException {
    Object localVarPostBody = updateAdgroupFeedRequestWrapper;
    
    // verify the required parameter 'updateAdgroupFeedRequestWrapper' is set
    if (updateAdgroupFeedRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'updateAdgroupFeedRequestWrapper' when calling updateAdgroupFeed");
    }
    
    // create path and map variables
    String localVarPath = "/json/feed/v1/AdgroupFeedService/updateAdgroupFeed";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<UpdateAdgroupFeedResponseWrapper> localVarReturnType = new TypeReference<UpdateAdgroupFeedResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
}
