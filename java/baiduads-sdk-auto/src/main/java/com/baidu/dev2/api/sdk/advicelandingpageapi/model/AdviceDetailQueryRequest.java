/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.advicelandingpageapi.model;

import java.util.Objects;
import java.util.Arrays;
import com.baidu.dev2.api.sdk.advicelandingpageapi.model.DetailQueryCondition;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * AdviceDetailQueryRequest
 */
@JsonPropertyOrder({
  AdviceDetailQueryRequest.JSON_PROPERTY_CONDITION,
  AdviceDetailQueryRequest.JSON_PROPERTY_REQ_NEWEST,
  AdviceDetailQueryRequest.JSON_PROPERTY_SOURCE,
  AdviceDetailQueryRequest.JSON_PROPERTY_ADVICE_ID,
  AdviceDetailQueryRequest.JSON_PROPERTY_ADVICE_KEY
})
@JsonTypeName("AdviceDetailQueryRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AdviceDetailQueryRequest {
  public static final String JSON_PROPERTY_CONDITION = "condition";
  private DetailQueryCondition condition;

  public static final String JSON_PROPERTY_REQ_NEWEST = "reqNewest";
  private Boolean reqNewest;

  public static final String JSON_PROPERTY_SOURCE = "source";
  private Integer source;

  public static final String JSON_PROPERTY_ADVICE_ID = "adviceId";
  private Long adviceId;

  public static final String JSON_PROPERTY_ADVICE_KEY = "adviceKey";
  private String adviceKey;

  public AdviceDetailQueryRequest() { 
  }

  public AdviceDetailQueryRequest condition(DetailQueryCondition condition) {
    
    this.condition = condition;
    return this;
  }

   /**
   * Get condition
   * @return condition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DetailQueryCondition getCondition() {
    return condition;
  }


  @JsonProperty(JSON_PROPERTY_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCondition(DetailQueryCondition condition) {
    this.condition = condition;
  }


  public AdviceDetailQueryRequest reqNewest(Boolean reqNewest) {
    
    this.reqNewest = reqNewest;
    return this;
  }

   /**
   * Get reqNewest
   * @return reqNewest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REQ_NEWEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getReqNewest() {
    return reqNewest;
  }


  @JsonProperty(JSON_PROPERTY_REQ_NEWEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReqNewest(Boolean reqNewest) {
    this.reqNewest = reqNewest;
  }


  public AdviceDetailQueryRequest source(Integer source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSource() {
    return source;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSource(Integer source) {
    this.source = source;
  }


  public AdviceDetailQueryRequest adviceId(Long adviceId) {
    
    this.adviceId = adviceId;
    return this;
  }

   /**
   * Get adviceId
   * @return adviceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getAdviceId() {
    return adviceId;
  }


  @JsonProperty(JSON_PROPERTY_ADVICE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdviceId(Long adviceId) {
    this.adviceId = adviceId;
  }


  public AdviceDetailQueryRequest adviceKey(String adviceKey) {
    
    this.adviceKey = adviceKey;
    return this;
  }

   /**
   * Get adviceKey
   * @return adviceKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADVICE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAdviceKey() {
    return adviceKey;
  }


  @JsonProperty(JSON_PROPERTY_ADVICE_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAdviceKey(String adviceKey) {
    this.adviceKey = adviceKey;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AdviceDetailQueryRequest adviceDetailQueryRequest = (AdviceDetailQueryRequest) o;
    return Objects.equals(this.condition, adviceDetailQueryRequest.condition) &&
        Objects.equals(this.reqNewest, adviceDetailQueryRequest.reqNewest) &&
        Objects.equals(this.source, adviceDetailQueryRequest.source) &&
        Objects.equals(this.adviceId, adviceDetailQueryRequest.adviceId) &&
        Objects.equals(this.adviceKey, adviceDetailQueryRequest.adviceKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(condition, reqNewest, source, adviceId, adviceKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AdviceDetailQueryRequest {\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    reqNewest: ").append(toIndentedString(reqNewest)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    adviceId: ").append(toIndentedString(adviceId)).append("\n");
    sb.append("    adviceKey: ").append(toIndentedString(adviceKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

