/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.payment.model;

import java.util.Objects;
import java.util.Arrays;
import com.baidu.dev2.api.sdk.payment.model.Condition;
import com.baidu.dev2.api.sdk.payment.model.Offset;
import com.baidu.dev2.api.sdk.payment.model.PaymentRecord;
import com.baidu.dev2.api.sdk.payment.model.Sort;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GetPaymentRecordResult
 */
@JsonPropertyOrder({
  GetPaymentRecordResult.JSON_PROPERTY_FUND_TYPE,
  GetPaymentRecordResult.JSON_PROPERTY_CONDITION,
  GetPaymentRecordResult.JSON_PROPERTY_CHUNK_SIZE,
  GetPaymentRecordResult.JSON_PROPERTY_OFFSET,
  GetPaymentRecordResult.JSON_PROPERTY_SORT,
  GetPaymentRecordResult.JSON_PROPERTY_TOTAL,
  GetPaymentRecordResult.JSON_PROPERTY_LIST
})
@JsonTypeName("GetPaymentRecordResult")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GetPaymentRecordResult {
  public static final String JSON_PROPERTY_FUND_TYPE = "fundType";
  private Integer fundType;

  public static final String JSON_PROPERTY_CONDITION = "condition";
  private Condition condition;

  public static final String JSON_PROPERTY_CHUNK_SIZE = "chunkSize";
  private Integer chunkSize;

  public static final String JSON_PROPERTY_OFFSET = "offset";
  private Offset offset;

  public static final String JSON_PROPERTY_SORT = "sort";
  private Sort sort;

  public static final String JSON_PROPERTY_TOTAL = "total";
  private String total;

  public static final String JSON_PROPERTY_LIST = "list";
  private List<PaymentRecord> list = null;

  public GetPaymentRecordResult() { 
  }

  public GetPaymentRecordResult fundType(Integer fundType) {
    
    this.fundType = fundType;
    return this;
  }

   /**
   * Get fundType
   * @return fundType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FUND_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFundType() {
    return fundType;
  }


  @JsonProperty(JSON_PROPERTY_FUND_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFundType(Integer fundType) {
    this.fundType = fundType;
  }


  public GetPaymentRecordResult condition(Condition condition) {
    
    this.condition = condition;
    return this;
  }

   /**
   * Get condition
   * @return condition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Condition getCondition() {
    return condition;
  }


  @JsonProperty(JSON_PROPERTY_CONDITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCondition(Condition condition) {
    this.condition = condition;
  }


  public GetPaymentRecordResult chunkSize(Integer chunkSize) {
    
    this.chunkSize = chunkSize;
    return this;
  }

   /**
   * Get chunkSize
   * @return chunkSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getChunkSize() {
    return chunkSize;
  }


  @JsonProperty(JSON_PROPERTY_CHUNK_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChunkSize(Integer chunkSize) {
    this.chunkSize = chunkSize;
  }


  public GetPaymentRecordResult offset(Offset offset) {
    
    this.offset = offset;
    return this;
  }

   /**
   * Get offset
   * @return offset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Offset getOffset() {
    return offset;
  }


  @JsonProperty(JSON_PROPERTY_OFFSET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOffset(Offset offset) {
    this.offset = offset;
  }


  public GetPaymentRecordResult sort(Sort sort) {
    
    this.sort = sort;
    return this;
  }

   /**
   * Get sort
   * @return sort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Sort getSort() {
    return sort;
  }


  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSort(Sort sort) {
    this.sort = sort;
  }


  public GetPaymentRecordResult total(String total) {
    
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTotal() {
    return total;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotal(String total) {
    this.total = total;
  }


  public GetPaymentRecordResult list(List<PaymentRecord> list) {
    
    this.list = list;
    return this;
  }

  public GetPaymentRecordResult addListItem(PaymentRecord listItem) {
    if (this.list == null) {
      this.list = new ArrayList<>();
    }
    this.list.add(listItem);
    return this;
  }

   /**
   * Get list
   * @return list
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PaymentRecord> getList() {
    return list;
  }


  @JsonProperty(JSON_PROPERTY_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setList(List<PaymentRecord> list) {
    this.list = list;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetPaymentRecordResult getPaymentRecordResult = (GetPaymentRecordResult) o;
    return Objects.equals(this.fundType, getPaymentRecordResult.fundType) &&
        Objects.equals(this.condition, getPaymentRecordResult.condition) &&
        Objects.equals(this.chunkSize, getPaymentRecordResult.chunkSize) &&
        Objects.equals(this.offset, getPaymentRecordResult.offset) &&
        Objects.equals(this.sort, getPaymentRecordResult.sort) &&
        Objects.equals(this.total, getPaymentRecordResult.total) &&
        Objects.equals(this.list, getPaymentRecordResult.list);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fundType, condition, chunkSize, offset, sort, total, list);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetPaymentRecordResult {\n");
    sb.append("    fundType: ").append(toIndentedString(fundType)).append("\n");
    sb.append("    condition: ").append(toIndentedString(condition)).append("\n");
    sb.append("    chunkSize: ").append(toIndentedString(chunkSize)).append("\n");
    sb.append("    offset: ").append(toIndentedString(offset)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    list: ").append(toIndentedString(list)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

