/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.imagemanagement.model;

import java.util.Objects;
import java.util.Arrays;
import com.baidu.dev2.api.sdk.imagemanagement.model.LogoPicType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UploadImageItem
 */
@JsonPropertyOrder({
  UploadImageItem.JSON_PROPERTY_CONTENT,
  UploadImageItem.JSON_PROPERTY_IMGMD5,
  UploadImageItem.JSON_PROPERTY_PARENT_URL,
  UploadImageItem.JSON_PROPERTY_PROVIDED_PATH,
  UploadImageItem.JSON_PROPERTY_PROVIDED_URL,
  UploadImageItem.JSON_PROPERTY_EXTEND_FIELD,
  UploadImageItem.JSON_PROPERTY_TARGET_FORMAT,
  UploadImageItem.JSON_PROPERTY_SOURCE_TYPE,
  UploadImageItem.JSON_PROPERTY_LOGO_PIC_TYPES,
  UploadImageItem.JSON_PROPERTY_IMAGE_NAME
})
@JsonTypeName("UploadImageItem")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UploadImageItem {
  public static final String JSON_PROPERTY_CONTENT = "content";
  private String content;

  public static final String JSON_PROPERTY_IMGMD5 = "imgmd5";
  private String imgmd5;

  public static final String JSON_PROPERTY_PARENT_URL = "parentUrl";
  private String parentUrl;

  public static final String JSON_PROPERTY_PROVIDED_PATH = "providedPath";
  private String providedPath;

  public static final String JSON_PROPERTY_PROVIDED_URL = "providedUrl";
  private String providedUrl;

  public static final String JSON_PROPERTY_EXTEND_FIELD = "extendField";
  private java.util.Map extendField;

  public static final String JSON_PROPERTY_TARGET_FORMAT = "targetFormat";
  private String targetFormat;

  public static final String JSON_PROPERTY_SOURCE_TYPE = "sourceType";
  private Integer sourceType;

  public static final String JSON_PROPERTY_LOGO_PIC_TYPES = "logoPicTypes";
  private List<LogoPicType> logoPicTypes = null;

  public static final String JSON_PROPERTY_IMAGE_NAME = "imageName";
  private String imageName;

  public UploadImageItem() { 
  }

  public UploadImageItem content(String content) {
    
    this.content = content;
    return this;
  }

   /**
   * Get content
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getContent() {
    return content;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setContent(String content) {
    this.content = content;
  }


  public UploadImageItem imgmd5(String imgmd5) {
    
    this.imgmd5 = imgmd5;
    return this;
  }

   /**
   * Get imgmd5
   * @return imgmd5
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IMGMD5)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImgmd5() {
    return imgmd5;
  }


  @JsonProperty(JSON_PROPERTY_IMGMD5)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImgmd5(String imgmd5) {
    this.imgmd5 = imgmd5;
  }


  public UploadImageItem parentUrl(String parentUrl) {
    
    this.parentUrl = parentUrl;
    return this;
  }

   /**
   * Get parentUrl
   * @return parentUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PARENT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getParentUrl() {
    return parentUrl;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setParentUrl(String parentUrl) {
    this.parentUrl = parentUrl;
  }


  public UploadImageItem providedPath(String providedPath) {
    
    this.providedPath = providedPath;
    return this;
  }

   /**
   * Get providedPath
   * @return providedPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROVIDED_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProvidedPath() {
    return providedPath;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDED_PATH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProvidedPath(String providedPath) {
    this.providedPath = providedPath;
  }


  public UploadImageItem providedUrl(String providedUrl) {
    
    this.providedUrl = providedUrl;
    return this;
  }

   /**
   * Get providedUrl
   * @return providedUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROVIDED_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProvidedUrl() {
    return providedUrl;
  }


  @JsonProperty(JSON_PROPERTY_PROVIDED_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProvidedUrl(String providedUrl) {
    this.providedUrl = providedUrl;
  }


  public UploadImageItem extendField(java.util.Map extendField) {
    
    this.extendField = extendField;
    return this;
  }

   /**
   * Get extendField
   * @return extendField
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXTEND_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public java.util.Map getExtendField() {
    return extendField;
  }


  @JsonProperty(JSON_PROPERTY_EXTEND_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExtendField(java.util.Map extendField) {
    this.extendField = extendField;
  }


  public UploadImageItem targetFormat(String targetFormat) {
    
    this.targetFormat = targetFormat;
    return this;
  }

   /**
   * Get targetFormat
   * @return targetFormat
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TARGET_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTargetFormat() {
    return targetFormat;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_FORMAT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetFormat(String targetFormat) {
    this.targetFormat = targetFormat;
  }


  public UploadImageItem sourceType(Integer sourceType) {
    
    this.sourceType = sourceType;
    return this;
  }

   /**
   * Get sourceType
   * @return sourceType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getSourceType() {
    return sourceType;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSourceType(Integer sourceType) {
    this.sourceType = sourceType;
  }


  public UploadImageItem logoPicTypes(List<LogoPicType> logoPicTypes) {
    
    this.logoPicTypes = logoPicTypes;
    return this;
  }

  public UploadImageItem addLogoPicTypesItem(LogoPicType logoPicTypesItem) {
    if (this.logoPicTypes == null) {
      this.logoPicTypes = new ArrayList<>();
    }
    this.logoPicTypes.add(logoPicTypesItem);
    return this;
  }

   /**
   * Get logoPicTypes
   * @return logoPicTypes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOGO_PIC_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<LogoPicType> getLogoPicTypes() {
    return logoPicTypes;
  }


  @JsonProperty(JSON_PROPERTY_LOGO_PIC_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLogoPicTypes(List<LogoPicType> logoPicTypes) {
    this.logoPicTypes = logoPicTypes;
  }


  public UploadImageItem imageName(String imageName) {
    
    this.imageName = imageName;
    return this;
  }

   /**
   * Get imageName
   * @return imageName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IMAGE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getImageName() {
    return imageName;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setImageName(String imageName) {
    this.imageName = imageName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadImageItem uploadImageItem = (UploadImageItem) o;
    return Objects.equals(this.content, uploadImageItem.content) &&
        Objects.equals(this.imgmd5, uploadImageItem.imgmd5) &&
        Objects.equals(this.parentUrl, uploadImageItem.parentUrl) &&
        Objects.equals(this.providedPath, uploadImageItem.providedPath) &&
        Objects.equals(this.providedUrl, uploadImageItem.providedUrl) &&
        Objects.equals(this.extendField, uploadImageItem.extendField) &&
        Objects.equals(this.targetFormat, uploadImageItem.targetFormat) &&
        Objects.equals(this.sourceType, uploadImageItem.sourceType) &&
        Objects.equals(this.logoPicTypes, uploadImageItem.logoPicTypes) &&
        Objects.equals(this.imageName, uploadImageItem.imageName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(content, imgmd5, parentUrl, providedPath, providedUrl, extendField, targetFormat, sourceType, logoPicTypes, imageName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadImageItem {\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    imgmd5: ").append(toIndentedString(imgmd5)).append("\n");
    sb.append("    parentUrl: ").append(toIndentedString(parentUrl)).append("\n");
    sb.append("    providedPath: ").append(toIndentedString(providedPath)).append("\n");
    sb.append("    providedUrl: ").append(toIndentedString(providedUrl)).append("\n");
    sb.append("    extendField: ").append(toIndentedString(extendField)).append("\n");
    sb.append("    targetFormat: ").append(toIndentedString(targetFormat)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    logoPicTypes: ").append(toIndentedString(logoPicTypes)).append("\n");
    sb.append("    imageName: ").append(toIndentedString(imageName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

