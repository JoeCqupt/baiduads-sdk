/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.baidu.dev2.api.sdk.campaign.api;

import com.fasterxml.jackson.core.type.TypeReference;

import com.baidu.dev2.api.sdk.invoke.ApiException;
import com.baidu.dev2.api.sdk.invoke.ApiClient;
import com.baidu.dev2.api.sdk.invoke.Configuration;
import com.baidu.dev2.api.sdk.campaign.model.*;
import com.baidu.dev2.api.sdk.invoke.Pair;

import com.baidu.dev2.api.sdk.campaign.model.AddCampaignRequestWrapper;
import com.baidu.dev2.api.sdk.campaign.model.AddCampaignResponseWrapper;
import com.baidu.dev2.api.sdk.campaign.model.DeleteCampaignRequestWrapper;
import com.baidu.dev2.api.sdk.campaign.model.DeleteCampaignResponseWrapper;
import com.baidu.dev2.api.sdk.campaign.model.GetCampaignRequestWrapper;
import com.baidu.dev2.api.sdk.campaign.model.GetCampaignResponseWrapper;
import com.baidu.dev2.api.sdk.campaign.model.UpdateCampaignRequestWrapper;
import com.baidu.dev2.api.sdk.campaign.model.UpdateCampaignResponseWrapper;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CampaignService {
  private ApiClient apiClient;

  public CampaignService() {
    this(Configuration.getDefaultApiClient());
  }

  public CampaignService(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  public ApiClient getApiClient() {
    return apiClient;
  }

  public void setApiClient(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * 
   * 
   * @param addCampaignRequestWrapper  (required)
   * @return AddCampaignResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public AddCampaignResponseWrapper addCampaign(AddCampaignRequestWrapper addCampaignRequestWrapper) throws ApiException {
    Object localVarPostBody = addCampaignRequestWrapper;
    
    // verify the required parameter 'addCampaignRequestWrapper' is set
    if (addCampaignRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'addCampaignRequestWrapper' when calling addCampaign");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/CampaignService/addCampaign";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<AddCampaignResponseWrapper> localVarReturnType = new TypeReference<AddCampaignResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param deleteCampaignRequestWrapper  (required)
   * @return DeleteCampaignResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public DeleteCampaignResponseWrapper deleteCampaign(DeleteCampaignRequestWrapper deleteCampaignRequestWrapper) throws ApiException {
    Object localVarPostBody = deleteCampaignRequestWrapper;
    
    // verify the required parameter 'deleteCampaignRequestWrapper' is set
    if (deleteCampaignRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'deleteCampaignRequestWrapper' when calling deleteCampaign");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/CampaignService/deleteCampaign";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<DeleteCampaignResponseWrapper> localVarReturnType = new TypeReference<DeleteCampaignResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param getCampaignRequestWrapper  (required)
   * @return GetCampaignResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public GetCampaignResponseWrapper getCampaign(GetCampaignRequestWrapper getCampaignRequestWrapper) throws ApiException {
    Object localVarPostBody = getCampaignRequestWrapper;
    
    // verify the required parameter 'getCampaignRequestWrapper' is set
    if (getCampaignRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'getCampaignRequestWrapper' when calling getCampaign");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/CampaignService/getCampaign";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<GetCampaignResponseWrapper> localVarReturnType = new TypeReference<GetCampaignResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
  /**
   * 
   * 
   * @param updateCampaignRequestWrapper  (required)
   * @return UpdateCampaignResponseWrapper
   * @throws ApiException if fails to make API call
   */
  public UpdateCampaignResponseWrapper updateCampaign(UpdateCampaignRequestWrapper updateCampaignRequestWrapper) throws ApiException {
    Object localVarPostBody = updateCampaignRequestWrapper;
    
    // verify the required parameter 'updateCampaignRequestWrapper' is set
    if (updateCampaignRequestWrapper == null) {
      throw new ApiException(400, "Missing the required parameter 'updateCampaignRequestWrapper' when calling updateCampaign");
    }
    
    // create path and map variables
    String localVarPath = "/json/sms/service/CampaignService/updateCampaign";

    // query params
    List<Pair> localVarQueryParams = new ArrayList<Pair>();
    List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
    Map<String, String> localVarHeaderParams = new HashMap<String, String>();
    Map<String, String> localVarCookieParams = new HashMap<String, String>();
    Map<String, Object> localVarFormParams = new HashMap<String, Object>();


    
    
    
    final String[] localVarAccepts = {
      "application/json;charset=UTF-8"
    };
    final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);

    final String[] localVarContentTypes = {
      "application/json;charset=UTF-8"
    };
    final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);

    String[] localVarAuthNames = new String[] {  };

    TypeReference<UpdateCampaignResponseWrapper> localVarReturnType = new TypeReference<UpdateCampaignResponseWrapper>() {};
    return apiClient.invokeAPI(
        localVarPath,
        "POST",
        localVarQueryParams,
        localVarCollectionQueryParams,
        localVarPostBody,
        localVarHeaderParams,
        localVarCookieParams,
        localVarFormParams,
        localVarAccept,
        localVarContentType,
        localVarAuthNames,
        localVarReturnType
    );
  }
}
