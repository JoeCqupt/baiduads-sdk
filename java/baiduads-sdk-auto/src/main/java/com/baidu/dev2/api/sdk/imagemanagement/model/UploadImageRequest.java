/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.imagemanagement.model;

import java.util.Objects;
import java.util.Arrays;
import com.baidu.dev2.api.sdk.imagemanagement.model.CompressionConf;
import com.baidu.dev2.api.sdk.imagemanagement.model.UploadImageItem;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * UploadImageRequest
 */
@JsonPropertyOrder({
  UploadImageRequest.JSON_PROPERTY_ITEMS,
  UploadImageRequest.JSON_PROPERTY_NEED_MOLA,
  UploadImageRequest.JSON_PROPERTY_PRODUCT_LINE,
  UploadImageRequest.JSON_PROPERTY_ADD_IMAGE,
  UploadImageRequest.JSON_PROPERTY_COMPRESSION,
  UploadImageRequest.JSON_PROPERTY_COMPRESSION_CONF,
  UploadImageRequest.JSON_PROPERTY_TOKEN
})
@JsonTypeName("UploadImageRequest")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UploadImageRequest {
  public static final String JSON_PROPERTY_ITEMS = "items";
  private List<UploadImageItem> items = null;

  public static final String JSON_PROPERTY_NEED_MOLA = "needMola";
  private Boolean needMola;

  public static final String JSON_PROPERTY_PRODUCT_LINE = "productLine";
  private String productLine;

  public static final String JSON_PROPERTY_ADD_IMAGE = "addImage";
  private Boolean addImage;

  public static final String JSON_PROPERTY_COMPRESSION = "compression";
  private Integer compression;

  public static final String JSON_PROPERTY_COMPRESSION_CONF = "compressionConf";
  private CompressionConf compressionConf;

  public static final String JSON_PROPERTY_TOKEN = "token";
  private String token;

  public UploadImageRequest() { 
  }

  public UploadImageRequest items(List<UploadImageItem> items) {
    
    this.items = items;
    return this;
  }

  public UploadImageRequest addItemsItem(UploadImageItem itemsItem) {
    if (this.items == null) {
      this.items = new ArrayList<>();
    }
    this.items.add(itemsItem);
    return this;
  }

   /**
   * Get items
   * @return items
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ITEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UploadImageItem> getItems() {
    return items;
  }


  @JsonProperty(JSON_PROPERTY_ITEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItems(List<UploadImageItem> items) {
    this.items = items;
  }


  public UploadImageRequest needMola(Boolean needMola) {
    
    this.needMola = needMola;
    return this;
  }

   /**
   * Get needMola
   * @return needMola
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NEED_MOLA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getNeedMola() {
    return needMola;
  }


  @JsonProperty(JSON_PROPERTY_NEED_MOLA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNeedMola(Boolean needMola) {
    this.needMola = needMola;
  }


  public UploadImageRequest productLine(String productLine) {
    
    this.productLine = productLine;
    return this;
  }

   /**
   * Get productLine
   * @return productLine
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PRODUCT_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProductLine() {
    return productLine;
  }


  @JsonProperty(JSON_PROPERTY_PRODUCT_LINE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProductLine(String productLine) {
    this.productLine = productLine;
  }


  public UploadImageRequest addImage(Boolean addImage) {
    
    this.addImage = addImage;
    return this;
  }

   /**
   * Get addImage
   * @return addImage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ADD_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getAddImage() {
    return addImage;
  }


  @JsonProperty(JSON_PROPERTY_ADD_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddImage(Boolean addImage) {
    this.addImage = addImage;
  }


  public UploadImageRequest compression(Integer compression) {
    
    this.compression = compression;
    return this;
  }

   /**
   * Get compression
   * @return compression
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCompression() {
    return compression;
  }


  @JsonProperty(JSON_PROPERTY_COMPRESSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompression(Integer compression) {
    this.compression = compression;
  }


  public UploadImageRequest compressionConf(CompressionConf compressionConf) {
    
    this.compressionConf = compressionConf;
    return this;
  }

   /**
   * Get compressionConf
   * @return compressionConf
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMPRESSION_CONF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CompressionConf getCompressionConf() {
    return compressionConf;
  }


  @JsonProperty(JSON_PROPERTY_COMPRESSION_CONF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompressionConf(CompressionConf compressionConf) {
    this.compressionConf = compressionConf;
  }


  public UploadImageRequest token(String token) {
    
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getToken() {
    return token;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToken(String token) {
    this.token = token;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadImageRequest uploadImageRequest = (UploadImageRequest) o;
    return Objects.equals(this.items, uploadImageRequest.items) &&
        Objects.equals(this.needMola, uploadImageRequest.needMola) &&
        Objects.equals(this.productLine, uploadImageRequest.productLine) &&
        Objects.equals(this.addImage, uploadImageRequest.addImage) &&
        Objects.equals(this.compression, uploadImageRequest.compression) &&
        Objects.equals(this.compressionConf, uploadImageRequest.compressionConf) &&
        Objects.equals(this.token, uploadImageRequest.token);
  }

  @Override
  public int hashCode() {
    return Objects.hash(items, needMola, productLine, addImage, compression, compressionConf, token);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadImageRequest {\n");
    sb.append("    items: ").append(toIndentedString(items)).append("\n");
    sb.append("    needMola: ").append(toIndentedString(needMola)).append("\n");
    sb.append("    productLine: ").append(toIndentedString(productLine)).append("\n");
    sb.append("    addImage: ").append(toIndentedString(addImage)).append("\n");
    sb.append("    compression: ").append(toIndentedString(compression)).append("\n");
    sb.append("    compressionConf: ").append(toIndentedString(compressionConf)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

