/*
 * dev2 api schema
 * 'dev2.baidu.com' api schema
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.baidu.dev2.api.sdk.growthpower.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GrowthIndicator
 */
@JsonPropertyOrder({
  GrowthIndicator.JSON_PROPERTY_INDICATOR_ID,
  GrowthIndicator.JSON_PROPERTY_INDICATOR_NAME,
  GrowthIndicator.JSON_PROPERTY_INDICATOR_TYPE,
  GrowthIndicator.JSON_PROPERTY_CHANGE_RATE,
  GrowthIndicator.JSON_PROPERTY_COMPARE_AVERAGE,
  GrowthIndicator.JSON_PROPERTY_KEY_INDICATOR_TAG,
  GrowthIndicator.JSON_PROPERTY_DETAIL_INDICATORS
})
@JsonTypeName("GrowthIndicator")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GrowthIndicator {
  public static final String JSON_PROPERTY_INDICATOR_ID = "indicatorId";
  private Integer indicatorId;

  public static final String JSON_PROPERTY_INDICATOR_NAME = "indicatorName";
  private String indicatorName;

  public static final String JSON_PROPERTY_INDICATOR_TYPE = "indicatorType";
  private Integer indicatorType;

  public static final String JSON_PROPERTY_CHANGE_RATE = "changeRate";
  private Double changeRate;

  public static final String JSON_PROPERTY_COMPARE_AVERAGE = "compareAverage";
  private Integer compareAverage;

  public static final String JSON_PROPERTY_KEY_INDICATOR_TAG = "keyIndicatorTag";
  private Integer keyIndicatorTag;

  public static final String JSON_PROPERTY_DETAIL_INDICATORS = "detailIndicators";
  private List<GrowthIndicator> detailIndicators = null;

  public GrowthIndicator() { 
  }

  public GrowthIndicator indicatorId(Integer indicatorId) {
    
    this.indicatorId = indicatorId;
    return this;
  }

   /**
   * Get indicatorId
   * @return indicatorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INDICATOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIndicatorId() {
    return indicatorId;
  }


  @JsonProperty(JSON_PROPERTY_INDICATOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndicatorId(Integer indicatorId) {
    this.indicatorId = indicatorId;
  }


  public GrowthIndicator indicatorName(String indicatorName) {
    
    this.indicatorName = indicatorName;
    return this;
  }

   /**
   * Get indicatorName
   * @return indicatorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INDICATOR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIndicatorName() {
    return indicatorName;
  }


  @JsonProperty(JSON_PROPERTY_INDICATOR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndicatorName(String indicatorName) {
    this.indicatorName = indicatorName;
  }


  public GrowthIndicator indicatorType(Integer indicatorType) {
    
    this.indicatorType = indicatorType;
    return this;
  }

   /**
   * Get indicatorType
   * @return indicatorType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INDICATOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getIndicatorType() {
    return indicatorType;
  }


  @JsonProperty(JSON_PROPERTY_INDICATOR_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIndicatorType(Integer indicatorType) {
    this.indicatorType = indicatorType;
  }


  public GrowthIndicator changeRate(Double changeRate) {
    
    this.changeRate = changeRate;
    return this;
  }

   /**
   * Get changeRate
   * @return changeRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CHANGE_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getChangeRate() {
    return changeRate;
  }


  @JsonProperty(JSON_PROPERTY_CHANGE_RATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setChangeRate(Double changeRate) {
    this.changeRate = changeRate;
  }


  public GrowthIndicator compareAverage(Integer compareAverage) {
    
    this.compareAverage = compareAverage;
    return this;
  }

   /**
   * Get compareAverage
   * @return compareAverage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMPARE_AVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCompareAverage() {
    return compareAverage;
  }


  @JsonProperty(JSON_PROPERTY_COMPARE_AVERAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCompareAverage(Integer compareAverage) {
    this.compareAverage = compareAverage;
  }


  public GrowthIndicator keyIndicatorTag(Integer keyIndicatorTag) {
    
    this.keyIndicatorTag = keyIndicatorTag;
    return this;
  }

   /**
   * Get keyIndicatorTag
   * @return keyIndicatorTag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_KEY_INDICATOR_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getKeyIndicatorTag() {
    return keyIndicatorTag;
  }


  @JsonProperty(JSON_PROPERTY_KEY_INDICATOR_TAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setKeyIndicatorTag(Integer keyIndicatorTag) {
    this.keyIndicatorTag = keyIndicatorTag;
  }


  public GrowthIndicator detailIndicators(List<GrowthIndicator> detailIndicators) {
    
    this.detailIndicators = detailIndicators;
    return this;
  }

  public GrowthIndicator addDetailIndicatorsItem(GrowthIndicator detailIndicatorsItem) {
    if (this.detailIndicators == null) {
      this.detailIndicators = new ArrayList<>();
    }
    this.detailIndicators.add(detailIndicatorsItem);
    return this;
  }

   /**
   * Get detailIndicators
   * @return detailIndicators
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DETAIL_INDICATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GrowthIndicator> getDetailIndicators() {
    return detailIndicators;
  }


  @JsonProperty(JSON_PROPERTY_DETAIL_INDICATORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetailIndicators(List<GrowthIndicator> detailIndicators) {
    this.detailIndicators = detailIndicators;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GrowthIndicator growthIndicator = (GrowthIndicator) o;
    return Objects.equals(this.indicatorId, growthIndicator.indicatorId) &&
        Objects.equals(this.indicatorName, growthIndicator.indicatorName) &&
        Objects.equals(this.indicatorType, growthIndicator.indicatorType) &&
        Objects.equals(this.changeRate, growthIndicator.changeRate) &&
        Objects.equals(this.compareAverage, growthIndicator.compareAverage) &&
        Objects.equals(this.keyIndicatorTag, growthIndicator.keyIndicatorTag) &&
        Objects.equals(this.detailIndicators, growthIndicator.detailIndicators);
  }

  @Override
  public int hashCode() {
    return Objects.hash(indicatorId, indicatorName, indicatorType, changeRate, compareAverage, keyIndicatorTag, detailIndicators);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GrowthIndicator {\n");
    sb.append("    indicatorId: ").append(toIndentedString(indicatorId)).append("\n");
    sb.append("    indicatorName: ").append(toIndentedString(indicatorName)).append("\n");
    sb.append("    indicatorType: ").append(toIndentedString(indicatorType)).append("\n");
    sb.append("    changeRate: ").append(toIndentedString(changeRate)).append("\n");
    sb.append("    compareAverage: ").append(toIndentedString(compareAverage)).append("\n");
    sb.append("    keyIndicatorTag: ").append(toIndentedString(keyIndicatorTag)).append("\n");
    sb.append("    detailIndicators: ").append(toIndentedString(detailIndicators)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

